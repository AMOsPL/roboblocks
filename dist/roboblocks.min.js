/*! roboblocks - v0.0.6 - 2014-10-15
* http://github.com/bq/roboblock
* Copyright (c) 2014 bq; Licensed  */
!function(a){"function"==typeof define&&define.amd?define(["underscore","blockly","blockly.blocks","blockly.lang"],a):a(_,window.Blockly,window.Blocks,window.BlocklyLang)}(function(_,Blockly,Blocks,BlocklyLang){var load=function(options){function isNumber(a){return-1!==a.search("ead")?!0:!isNaN(parseFloat(a))}function isNumber(a){return!isNaN(parseFloat(a))}Blockly.createToolbox=function(){var a={};for(var b in this.Blocks)if(this.Blocks.hasOwnProperty(b)&&this.Blocks[b]instanceof Object&&this.Blocks[b].category){var c=this.Blocks[b].category;a[c]=a[c]||[],a[c].push(b)}var d='<xml id="toolbox" style="display: none">',e=function(a){d+='<block type="'+a+'"></block>'};for(b in a)a.hasOwnProperty(b)&&(d+='<category name="'+b+'">',a[b].forEach(e),d+="</category>");return d+="</xml>"},RoboBlocks.GITHUB_SRC_URL="https://github.com/bq/roboblocks/tree/master/src/",RoboBlocks.LANG_COLOUR_BQ="10",RoboBlocks.LANG_COLOUR_ZUM="336",RoboBlocks.LANG_COLOUR_SERVO="30",RoboBlocks.LANG_COLOUR_TEXT="200",RoboBlocks.LANG_COLOUR_LOGIC="120",RoboBlocks.LANG_COLOUR_ADVANCED="260",RoboBlocks.LANG_COLOUR_VARIABLES="300",RoboBlocks.LANG_COLOUR_PROCEDURES="320",RoboBlocks.LANG_COLOUR_CONTROL="80",RoboBlocks.LANG_COLOUR_MATH="180",RoboBlocks.LANG_VARIABLES_SET_ITEM="item",RoboBlocks.LANG_CATEGORY_LOGIC="Logic",RoboBlocks.LANG_LOGIC_OPERATION_AND="and",RoboBlocks.LANG_LOGIC_OPERATION_OR="or",RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_EQ="Returns true if both inputs equal each other.",RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="Returns true if both inputs are not equal to each other.",RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_LT="Returns true if the first input is smaller than the second input.",RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_LTE="Returns true if the first input is smaller than or equal to the second input.",RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_GT="Returns true if the first input is greater than the second input.",RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_GTE="Returns true if the first input is greater than or equal to the second input.",RoboBlocks.LANG_LOGIC_OPERATION_AND="and",RoboBlocks.LANG_LOGIC_OPERATION_OR="or",RoboBlocks.LANG_LOGIC_OPERATION_TOOLTIP_AND="Returns true if both inputs are true.",RoboBlocks.LANG_LOGIC_OPERATION_TOOLTIP_OR="Returns true if either inputs are true.",RoboBlocks.LANG_LOGIC_OPERATION_TOOLTIP_AND="Returns true if both conditions are fulfilled",RoboBlocks.LANG_LOGIC_OPERATION_TOOLTIP_OR="Returns true if one of the conditions is true",RoboBlocks.LANG_LOGIC_NEGATE_INPUT_NOT="not",RoboBlocks.LANG_LOGIC_NEGATE_TOOLTIP="Returns true if the input is false. Returns false if the input is true.",RoboBlocks.LANG_LOGIC_NEGATE_HELPURL="",RoboBlocks.LANG_LOGIC_NEGATE_INPUT_NOT="not",RoboBlocks.LANG_LOGIC_NEGATE_TOOLTIP="Returns true if the input is false. Returns false if the input is true.",RoboBlocks.LANG_LOGIC_BOOLEAN_TRUE="true",RoboBlocks.LANG_LOGIC_BOOLEAN_FALSE="false",RoboBlocks.LANG_LOGIC_BOOLEAN_TOOLTIP="Returns either true or false.",RoboBlocks.LANG_LOGIC_NULL="null",RoboBlocks.LANG_LOGIC_NULL_TOOLTIP="Returns null.",RoboBlocks.LANG_CATEGORY_BQ="bq bloqs",RoboBlocks.LANG_BQ_BAT="BAT",RoboBlocks.LANG_BQ_BAT_RED_PIN="RED PIN#",RoboBlocks.LANG_BQ_BAT_BLUE_PIN="BLUE PIN#",RoboBlocks.LANG_BQ_BAT_TOOLTIP="Output the measured distance",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE="Bluetooth",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_PIN1="PIN 1#",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_PIN2="PIN 2#",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_NAME="Name",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_PINCODE="PinCode",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_RECEIVE="Receive",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_SEND="Send",RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_TOOLTIP="bq Bluetooth",RoboBlocks.LANG_BQ_BUTTON="Button",RoboBlocks.LANG_BQ_BUTTON_PIN="PIN#",RoboBlocks.LANG_BQ_BUTTON_TOOLTIP="bq Button",RoboBlocks.LANG_BQ_BUTTONS="Buttons",RoboBlocks.LANG_BQ_BUTTONS_PIN="PIN#",RoboBlocks.LANG_BQ_BUTTONS_BUTTON_A="Button #A",RoboBlocks.LANG_BQ_BUTTONS_BUTTON_B="Button #B",RoboBlocks.LANG_BQ_BUTTONS_BUTTON_C="Button #C",RoboBlocks.LANG_BQ_BUTTONS_BUTTON_D="Button #D",RoboBlocks.LANG_BQ_BUTTONS_BUTTON_E="Button #E",RoboBlocks.LANG_BQ_BUTTONS_TOOLTIP="bq Buttons",RoboBlocks.LANG_BQ_INFRARED="Infrared Sensor",RoboBlocks.LANG_BQ_INFRARED_PIN="PIN#",RoboBlocks.LANG_BQ_INFRARED_TOOLTIP="bq Infrared Sensor",RoboBlocks.LANG_BQ_JOYSTICK="Joystick",RoboBlocks.LANG_BQ_JOYSTICK_PIN="PIN#",RoboBlocks.LANG_BQ_JOYSTICK_TOOLTIP="bq Joystick",RoboBlocks.LANG_BQ_LED="LED",RoboBlocks.LANG_BQ_LED_PIN="PIN#",RoboBlocks.LANG_BQ_LED_STATE="state",RoboBlocks.LANG_BQ_LED_ON="ON",RoboBlocks.LANG_BQ_LED_OFF="OFF",RoboBlocks.LANG_BQ_LED_TOOLTIP="bq LED",RoboBlocks.LANG_BQ_PHOTORESISTOR="Photoresistor",RoboBlocks.LANG_BQ_PHOTORESISTOR_PIN="PIN#",RoboBlocks.LANG_BQ_PHOTORESISTOR_TOOLTIP="Output the value of the photoresistor.",RoboBlocks.LANG_BQ_PIEZO_BUZZER="Buzzer",RoboBlocks.LANG_BQ_PIEZO_BUZZER_PIN="PIN#",RoboBlocks.LANG_BQ_PIEZO_BUZZER_TONE="TONE",RoboBlocks.LANG_BQ_PIEZO_BUZZER_DO="DO",RoboBlocks.LANG_BQ_PIEZO_BUZZER_RE="RE",RoboBlocks.LANG_BQ_PIEZO_BUZZER_MI="MI",RoboBlocks.LANG_BQ_PIEZO_BUZZER_FA="FA",RoboBlocks.LANG_BQ_PIEZO_BUZZER_SOL="SOL",RoboBlocks.LANG_BQ_PIEZO_BUZZER_LA="LA",RoboBlocks.LANG_BQ_PIEZO_BUZZER_SI="SI",RoboBlocks.LANG_BQ_PIEZO_BUZZER_DURATION="Duration",RoboBlocks.LANG_BQ_PIEZO_BUZZER_TOOLTIP="Piezo Buzzer",RoboBlocks.LANG_BQ_PIEZO_BUZZERAV="Advanced Buzzer",RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_PIN="PIN#",RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_TONE="TONE",RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_DURATION="Duration",RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_TOOLTIP="Piezo Buzzer Advanced",RoboBlocks.LANG_BQ_POTENTIOMETER="Potentiometer",RoboBlocks.LANG_BQ_POTENTIOMETER_PIN="PIN#",RoboBlocks.LANG_BQ_POTENTIOMETER_TOOLTIP="bq Potentiometer",RoboBlocks.LANG_CATEGORY_CONTROLS="Control",RoboBlocks.LANG_CONTROLS_BASE_DELAY_WAIT="Wait (ms)",RoboBlocks.LANG_CONTROLS_BASE_DELAY_TOOLTIP="Delay specific time (in ms)",RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_1="If a value is true, then do some statements.",RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_2="If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_3="If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_4="If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",RoboBlocks.LANG_CONTROLS_IF_MSG_IF="if",RoboBlocks.LANG_CONTROLS_IF_MSG_ELSEIF="else if",RoboBlocks.LANG_CONTROLS_IF_MSG_ELSE="else",RoboBlocks.LANG_CONTROLS_IF_MSG_THEN="do",RoboBlocks.LANG_CONTROLS_IF_IF_Field_IF="if",RoboBlocks.LANG_CONTROLS_IF_IF_TOOLTIP="Add, remove, or reorder sections to reconfigure this if block.",RoboBlocks.LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF="else if",RoboBlocks.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Add a condition to the if block.",RoboBlocks.LANG_CONTROLS_IF_ELSE_Field_ELSE="else",RoboBlocks.LANG_CONTROLS_IF_ELSE_TOOLTIP="Add a final, catch-all condition to the if block.",RoboBlocks.LANG_CONTROLS_IF_IF_Field_IF="if",RoboBlocks.LANG_CONTROLS_IF_IF_TOOLTIP="Add, remove, or reorder sections to reconfigure this if block.",RoboBlocks.LANG_CONTROLS_FOR_INPUT_WITH="count with",RoboBlocks.LANG_CONTROLS_FOR_INPUT_VAR="x",RoboBlocks.LANG_CONTROLS_FOR_INPUT_FROM="from",RoboBlocks.LANG_CONTROLS_FOR_INPUT_TO="to",RoboBlocks.LANG_CONTROLS_FOR_INPUT_DO="do",RoboBlocks.LANG_CONTROLS_FOR_TOOLTIP="Count from a start number to an end number. For each count, set the current count number to variable %1, and then do some statements.",RoboBlocks.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="while",RoboBlocks.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="until",RoboBlocks.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="While a value is true, then do some statements.",RoboBlocks.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="While a value is false, then do some statements.",RoboBlocks.LANG_CONTROLS_REPEAT_TITLE_REPEAT="Repeat",RoboBlocks.LANG_CONTROLS_REPEAT_TITLE_TIMES="times",RoboBlocks.LANG_CONTROLS_REPEAT_INPUT_DO="do",RoboBlocks.LANG_CONTROLS_REPEAT_TOOLTIP="Repeat the code a certain number of times",RoboBlocks.LANG_CONTROLS_FOREACH_HELPURL="",RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_ITEM="for each item",RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_VAR="x",RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_INLIST="in list",RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_DO="do",RoboBlocks.LANG_CONTROLS_FOREACH_TOOLTIP="For each item in a list, set the item to variable %1, and then do some statements.",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP="of loop",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="break out",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="continue with next iteration",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="Break out of the containing loop.",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Skip the rest of this loop, and continue with the next iteration.",RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Warning: This block may only be used within a loop.",RoboBlocks.LANG_CONTROLS_SWITCH_HELPURL="",RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_1="Use the switch statement to select one of many blocks of code to be executed.",RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_2="Use the switch statement to select one of many blocks of code to be executed.",RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_3="Use the switch statement to select one of many blocks of code to be executed.",RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_4="Use the switch statement to select one of many blocks of code to be executed.",RoboBlocks.LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP="The switch expression is evaluated once",RoboBlocks.LANG_CONTROLS_SWITCH_CASE_TOOLTIP="case",RoboBlocks.LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP="The default keyword specifies the code to run if there is no case match",RoboBlocks.LANG_CATEGORY_MATH="Math",RoboBlocks.LANG_MATH_ADVANCED_MAP_MAP="Map ",RoboBlocks.LANG_MATH_ADVANCED_MAP_FROM="From [",RoboBlocks.LANG_MATH_ADVANCED_MAP_HYPHEN="-",RoboBlocks.LANG_MATH_ADVANCED_MAP_BRACKET="]",RoboBlocks.LANG_MATH_ADVANCED_MAP_TO="to [",RoboBlocks.LANG_MATH_ADVANCED_MAP_TOOLTIP="Re-maps a number from a certain range to another.",RoboBlocks.LANG_MATH_NUMBER_TOOLTIP="Number",RoboBlocks.LANG_MATH_BASE_MAP="Map ",RoboBlocks.LANG_MATH_BASE_MAP_VALUE_TO="Value to [0-",RoboBlocks.LANG_MATH_BASE_MAP_BRACKET="]",RoboBlocks.LANG_MATH_BASE_MAP_TOOLTIP="Re-maps a number from [0-1024] to another.",RoboBlocks.LANG_MATH_SINGLE_OP_ROOT="square root",RoboBlocks.LANG_MATH_SINGLE_OP_ABSOLUTE="absolute",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_ROOT="Returns the square root of a number.",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_ABS="Returns the absolute value of a number.",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_NEG="Returns the negation of a number.",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_LN="Returns the natural logarithm of a number.",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_LOG10="Returns the base 10 logarithm of a number.",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_EXP="Returns e to the power of a number.",RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_POW10="Returns 10 to the power of a number.",RoboBlocks.LANG_CATEGORY_TEXT="Text",RoboBlocks.LANG_TEXT_TEXT_HELPURL="",RoboBlocks.LANG_TEXT_TEXT_TOOLTIP="A letter, word, or line of text.",RoboBlocks.LANG_TEXT_JOIN_HELPURL="",RoboBlocks.LANG_TEXT_JOIN_Field_CREATEWITH="create text with",RoboBlocks.LANG_TEXT_JOIN_TOOLTIP="Create a piece of text by joining together any number of items.",RoboBlocks.LANG_TEXT_CREATE_JOIN_Field_JOIN="join",RoboBlocks.LANG_TEXT_CREATE_JOIN_TOOLTIP="Add, remove, or reorder sections to reconfigure this text block.",RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM="item",RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP="Add an item to the text.",RoboBlocks.LANG_TEXT_CREATE_JOIN_TITLE_JOIN="join",RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM="element",RoboBlocks.LANG_TEXT_APPEND_HELPURL="",RoboBlocks.LANG_TEXT_APPEND_TO="to",RoboBlocks.LANG_TEXT_APPEND_APPENDTEXT="append text",RoboBlocks.LANG_TEXT_APPEND_VARIABLE="item",RoboBlocks.LANG_TEXT_APPEND_TOOLTIP="Append some text to variable %1.",RoboBlocks.LANG_TEXT_LENGTH_HELPURL="",RoboBlocks.LANG_TEXT_LENGTH_INPUT_LENGTH="length",RoboBlocks.LANG_TEXT_LENGTH_TOOLTIP="Returns number of letters (including spaces) in the provided text.",RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_IS="Is ",RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_EQUAL=" equal to",RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_QUESTION="?",RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_TOOLTIP="Returns true if both input strings are equal, regardless of the case.",RoboBlocks.LANG_text_getBytes="get bytes of",RoboBlocks.LANG_TEXT_GETBYTES_TOOLTIP="Returns the number of bytes of the input string",RoboBlocks.LANG_TEXT_SUBSTRING="Crop ",RoboBlocks.LANG_TEXT_SUBSTRING_FROM="from",RoboBlocks.LANG_TEXT_SUBSTRING_TO="to",RoboBlocks.LANG_TEXT_SUBSTRING_TOOLTIP="Obtain a substring from the input string with the caracters between the two input numbers.",RoboBlocks.LANG_CATEGORY_ADVANCED="Advanced",RoboBlocks.LANG_ADVANCED_CONVERSION_CONVERT="Convert",RoboBlocks.LANG_ADVANCED_CONVERSION_DECIMAL="Decimal",RoboBlocks.LANG_ADVANCED_CONVERSION_HEXADECIMAL="Hexadecimal",RoboBlocks.LANG_ADVANCED_CONVERSION_OCTAL="Octal",RoboBlocks.LANG_ADVANCED_CONVERSION_BINARY="Binary",RoboBlocks.LANG_ADVANCED_CONVERSION_VALUE="value",RoboBlocks.LANG_ADVANCED_CONVERSION_TOOLTIP="Base convert a number",RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_READ="AnalogRead PIN#",RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP="Reads the value from a specified digital pin",RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_WRITE="AnalogWrite PIN#",RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE="value",RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP="Write analog value between 0 and 255 to a specific Port",RoboBlocks.LANG_ADVANCED_BUILTIN_LED="BUILTIN LED",RoboBlocks.LANG_ADVANCED_BUILTIN_LED_STATE="state",RoboBlocks.LANG_ADVANCED_BUILTIN_LED_ON="ON",RoboBlocks.LANG_ADVANCED_BUILTIN_LED_OFF="OFF",RoboBlocks.LANG_ADVANCED_BUILTIN_LED_TOOLTIP="bq LED",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_READ="DigitalRead PIN#",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP="Reads the value from a specified digital pin",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE="DigitalWrite",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN="PIN#",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE="state",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH="HIGH",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW="LOW",RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP="bq digital_write",RoboBlocks.LANG_ADVANCED_HIGHLOW_HIGH="HIGH",RoboBlocks.LANG_ADVANCED_HIGHLOW_LOW="LOW",RoboBlocks.LANG_ADVANCED_HIGHLOW_TOOLTIP="HIGH OR LOW",RoboBlocks.LANG_ADVANCED_MATH_RANDOM="Random between",RoboBlocks.LANG_ADVANCED_MATH_RANDOM_AND=" and ",RoboBlocks.LANG_ADVANCED_MATH_RANDOM_TOOLTIP="Assign a random number",RoboBlocks.LANG_ADVANCED_SERIAL_AVAILABLE="Serial Available",RoboBlocks.LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP="Check wether the serial port is available or not",RoboBlocks.LANG_ADVANCED_SERIAL_PRINT="Serial Print",RoboBlocks.LANG_ADVANCED_SERIAL_PRINT_TOOLTIP="Prints data to the console/serial port as human-readable ASCII text.",RoboBlocks.LANG_ADVANCED_SERIAL_PRINTLN="Serial Println",RoboBlocks.LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP="Prints data to the console/serial port as human-readable ASCII text and add CR.",RoboBlocks.LANG_ADVANCED_SERIAL_READ="Serial Read",RoboBlocks.LANG_ADVANCED_SERIAL_READ_TOOLTIP="Reads incoming serial data from serial port as human-readable ASCII text.",RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL="Special Chars",RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_TAB="Tab",RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN="Carriage Return",RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED="Line Feed",RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP="Write special Chars",RoboBlocks.LANG_CATEGORY_PROCEDURES="Procedures",RoboBlocks.LANG_PROCEDURES_DEFNORETURN_HELPURL="",RoboBlocks.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="procedure",RoboBlocks.LANG_PROCEDURES_DEFNORETURN_DO="do",RoboBlocks.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="A procedure with no return value.",RoboBlocks.LANG_PROCEDURES_DEFRETURN_HELPURL="",RoboBlocks.LANG_PROCEDURES_DEFRETURN_PROCEDURE=RoboBlocks.LANG_PROCEDURES_DEFNORETURN_PROCEDURE,RoboBlocks.LANG_PROCEDURES_DEFRETURN_DO=RoboBlocks.LANG_PROCEDURES_DEFNORETURN_DO,RoboBlocks.LANG_PROCEDURES_DEFRETURN_RETURN="return",RoboBlocks.LANG_PROCEDURES_DEFRETURN_TOOLTIP="A procedure with a return value.",RoboBlocks.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Warning: This procedure has duplicate parameters.",RoboBlocks.LANG_PROCEDURES_CALLNORETURN_HELPURL="",RoboBlocks.LANG_PROCEDURES_CALLNORETURN_CALL="do",RoboBlocks.LANG_PROCEDURES_CALLNORETURN_PROCEDURE="procedure",RoboBlocks.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Call a procedure with no return value.",RoboBlocks.LANG_PROCEDURES_CALLRETURN_HELPURL="",RoboBlocks.LANG_PROCEDURES_CALLRETURN_CALL=RoboBlocks.LANG_PROCEDURES_CALLNORETURN_CALL,RoboBlocks.LANG_PROCEDURES_CALLRETURN_PROCEDURE=RoboBlocks.LANG_PROCEDURES_CALLNORETURN_PROCEDURE,RoboBlocks.LANG_PROCEDURES_CALLRETURN_TOOLTIP="Call a procedure with a return value.",RoboBlocks.LANG_PROCEDURES_MUTATORCONTAINER_Field="parameters",RoboBlocks.LANG_PROCEDURES_MUTATORARG_Field="variable:",RoboBlocks.LANG_PROCEDURES_HIGHLIGHT_DEF="Highlight Procedure",RoboBlocks.LANG_PROCEDURES_IFRETURN_TOOLTIP="If a value is true, then returns a value.",RoboBlocks.LANG_PROCEDURES_IFRETURN_WARNING="Warning: This block may only be used within a procedure.",RoboBlocks.LANG_CATEGORY_VARIABLES="Variables",RoboBlocks.LANG_VARIABLES_DECLARE="Declare a variable ",RoboBlocks.LANG_VARIABLES_DECLARE_TYPE="of type ",RoboBlocks.LANG_VARIABLES_DECLARE_TOOLTIP="Declare a variable of type int or String",RoboBlocks.LANG_VARIABLES_GLOBAL="New variable ",RoboBlocks.LANG_VARIABLES_GLOBAL_TYPE="of type ",RoboBlocks.LANG_VARIABLES_GLOBAL_EQUALS="equals",RoboBlocks.LANG_VARIABLES_GLOBAL_TOOLTIP="Declare and define a GLOBAL variable of type int or String",RoboBlocks.LANG_VARIABLES_LOCAL="New LOCAL variable ",RoboBlocks.LANG_VARIABLES_LOCAL_TYPE="of type ",RoboBlocks.LANG_VARIABLES_LOCAL_EQUALS="equals",RoboBlocks.LANG_VARIABLES_LOCAL_TOOLTIP="Declare and define a LOCAL variable of type int or String",RoboBlocks.LANG_VARIABLES_DEFINE="Define variable ",RoboBlocks.LANG_VARIABLES_DEFINE_AS="as",RoboBlocks.LANG_VARIABLES_DEFINE_TOOLTIP="Define the value of a variable",RoboBlocks.LANG_VARIABLES_SET="Set variable ",RoboBlocks.LANG_VARIABLES_SET_AS="as",RoboBlocks.LANG_VARIABLES_SET_TOOLTIP="Set the value of a variable",RoboBlocks.LANG_VARIABLES_GET="Variable ",RoboBlocks.LANG_VARIABLES_GET_TOOLTIP="Get the value of a variable",RoboBlocks.LANG_VARIABLES_PIN_TOOLTIP="Select the PIN",RoboBlocks.LANG_CATEGORY_ZUM="zum",RoboBlocks.LANG_ZUM_BUTTON="Button",RoboBlocks.LANG_ZUM_BUTTON_PIN="PIN#",RoboBlocks.LANG_ZUM_BUTTON_TOOLTIP="bq Button",RoboBlocks.LANG_ZUM_FOLLOWER="Infrared Sensor",RoboBlocks.LANG_ZUM_FOLLOWER_PIN_LEFT="PIN LEFT#",RoboBlocks.LANG_ZUM_FOLLOWER_PIN_RIGHT="PIN RIGHT#",RoboBlocks.LANG_ZUM_FOLLOWER_LEFT="Left",RoboBlocks.LANG_ZUM_FOLLOWER_RIGHT="Right",RoboBlocks.LANG_ZUM_FOLLOWER_TOOLTIP="bq Infrared Sensor",RoboBlocks.LANG_ZUM_INFRARED="Infrared Sensor",RoboBlocks.LANG_ZUM_INFRARED_PIN="PIN#",RoboBlocks.LANG_ZUM_INFRARED_TOOLTIP="bq Infrared Sensor",RoboBlocks.LANG_ZUM_LED="LED",RoboBlocks.LANG_ZUM_LED_PIN="PIN#",RoboBlocks.LANG_ZUM_LED_ON="ON",RoboBlocks.LANG_ZUM_LED_OFF="OFF",RoboBlocks.LANG_ZUM_LED_TOOLTIP="bq LED",RoboBlocks.LANG_ZUM_PHOTORESISTOR="Photoresistor",RoboBlocks.LANG_ZUM_PHOTORESISTOR_PIN="PIN#",RoboBlocks.LANG_ZUM_PHOTORESISTOR_TOOLTIP="Output the value of the photoresistor.",RoboBlocks.LANG_ZUM_PIEZO_BUZZER="Buzzer",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_PIN="PIN#",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_TONE="TONE",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_DO="DO",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_RE="RE",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_MI="MI",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_FA="FA",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_SOL="SOL",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_LA="LA",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_SI="SI",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_DURATION="Duration",RoboBlocks.LANG_ZUM_PIEZO_BUZZER_TOOLTIP="Piezo Buzzer",RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV="Advanced Buzzer",RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_PIN="PIN#",RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_TONE="TONE",RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_DURATION="Duration",RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP="Piezo Buzzer Advanced",RoboBlocks.LANG_ZUM_POTENTIOMETER="Potentiometer",RoboBlocks.LANG_ZUM_POTENTIOMETER_PIN="PIN#",RoboBlocks.LANG_ZUM_POTENTIOMETER_TOOLTIP="zum Potentiometer",RoboBlocks.LANG_CATEGORY_SERVO="Servo",RoboBlocks.LANG_SERVO_CONT="Servo",RoboBlocks.LANG_SERVO_CONT_PIN="PIN#",RoboBlocks.LANG_SERVO_CONT_ROT="ROT",RoboBlocks.LANG_SERVO_CONT_TURN_CLOCKWISE="TURN CLOCKWISE",RoboBlocks.LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE="TURN COUNTERCLOCKWISE",RoboBlocks.LANG_SERVO_CONT_STOPPED="STOPPED",RoboBlocks.LANG_SERVO_CONT_DELAY="Delay",RoboBlocks.LANG_SERVO_CONT_TOOLTIP="Continuous rotation servo",RoboBlocks.LANG_SERVO_MOVE="Servo",RoboBlocks.LANG_SERVO_MOVE_PIN="PIN#",RoboBlocks.LANG_SERVO_MOVE_DEGREES="Degrees (0~180)",RoboBlocks.LANG_SERVO_MOVE_DELAY="Delay",RoboBlocks.LANG_SERVO_MOVE_TOOLTIP="Move between 0~180 degree",RoboBlocks.LANG_SERVO_READ_DEGREES="Read Degrees",RoboBlocks.LANG_SERVO_READ_DEGREES_PIN="PIN#",RoboBlocks.LANG_SERVO_READ_DEGREES_SERVO="Servo",RoboBlocks.LANG_SERVO_READ_DEGREES_TOOLTIP="Returns that degree with the last servo move.";var profiles={arduino:{description:"Standard-compatible board",digital:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"]],bluetooth:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"]],pwm:[["#3","3"],["#5","5"],["#6","6"],["#9","9"],["#10","10"],["#11","11"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],serial:9600},arduino_mega:{description:"Mega-compatible board"}};profiles["default"]=profiles.arduino,this.JST=this.JST||{},this.JST.advanced_conversion=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(value_num)+","+__e(convertion);return __p},this.JST.advanced_map=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="map("+__e(num)+","+__e(from_min)+","+__e(from_max)+","+__e(to_min)+","+__e(to_max)+")";return __p},this.JST.base_delay=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="delay("+__e(delay_time)+");\n";return __p},this.JST.base_map=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="map("+__e(value_num)+",0,1023,0,"+__e(value_dmax)+",)";return __p},this.JST.bq_bat=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Distance"+__e(red_pin)+"()";return __p},this.JST.bq_bat_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="//bqBAT\nlong Distance"+__e(red_pin)+"()\n{\n  long microseconds = TP_init"+__e(red_pin)+"();\n  long distance;\n  distance = microseconds/29/2;\n  return distance;\n}\n\nlong TP_init"+__e(red_pin)+"()\n{\n  digitalWrite( "+__e(blue_pin)+" , LOW);\n  delayMicroseconds(2);\n  digitalWrite( "+__e(blue_pin)+" , HIGH);\n  delayMicroseconds(10);\n  digitalWrite( "+__e(blue_pin)+" , LOW);\n  long microseconds = pulseIn( "+__e(red_pin)+" ,HIGH);\n  return microseconds;\n}\n";return __p},this.JST.bq_bat_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(red_pin)+" , INPUT );\n  pinMode( "+__e(blue_pin)+" , OUTPUT );";return __p},this.JST.bq_bluetooth_slave=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="char recvChar_"+__e(dropdown_pin)+";\n while(1) {\n  if(blueToothSerial_"+__e(dropdown_pin)+".available()) { //Check if there is any data sent from the remote bluetooth\n    recvChar_"+__e(dropdown_pin)+" = blueToothSerial_"+__e(dropdown_pin)+".read();\n    Serial.print(recvChar_"+__e(dropdown_pin)+");\n}\n  if(Serial.available()){ //Check if there is any data sent from the local serial terminal\n    recvChar_"+__e(dropdown_pin)+" = Serial.read();\n    blueToothSerial_"+__e(dropdown_pin)+".print(recvChar_"+__e(dropdown_pin)+");\n	}\n }\n";return __p},this.JST.bq_bluetooth_slave_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <SoftwareSerial.h>\n\nSoftwareSerial blueToothSerial_"+__e(dropdown_pin)+"("+__e(dropdown_pin)+","+__e(NextPIN)+");\n\nvoid setupBlueToothConnection_"+__e(dropdown_pin)+"()\n{\n  blueToothSerial_"+__e(dropdown_pin)+".begin(38400); //Set Bluetooth BaudRate to default baud rate 38400\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STWMOD=0\\\\r\\\\n'); //Set the bluetooth work in slave mode\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STNA="+__e(name)+"\\\\r\\\\n'); //Set the bluetooth name as "+__e(name)+"\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STPIN="+__e(pincode)+"\\\\r\\\\n'); //Set SLAVE pincode\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STOAUT=1\\\\r\\\\n'); //Auto-connection should be forbidden\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STAUTO=0\\\\r\\\\n');\n  delay(2000); //This delay is required\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+INQ=1\\\\r\\\\n'); //Make the slave bluetooth inquirable\n  Serial.println('The slave bluetooth is inquirable!');\n  delay(2000); //This delay is required\n  blueToothSerial_"+__e(dropdown_pin)+".flush();\n}\n";return __p},this.JST.bq_bluetooth_slave_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin(9600);\n  pinMode("+__e(dropdown_pin)+",OUTPUT);\n  pinMode("+__e(NextPIN)+", OUTPUT);\n  setupBlueToothConnection_"+__e(dropdown_pin)+"();\n\n";return __p},this.JST.bq_button=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.bq_button_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT_PULLUP);\n";return __p},this.JST.bq_buttons=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="  adc_key_in =analogRead("+__e(dropdown_pin)+");\n  key = get_key(adc_key_in);\n  if (key != oldkey)\n  {\n    delay(50);\n    adc_key_in = analogRead("+__e(dropdown_pin)+");\n    key = get_key(adc_key_in);\n    if (key != oldkey)\n    {\n      oldkey = key;\n      if (key >=0){\n        switch(key)\n        {\n          case 0:\n           code_btn1\n          break;\n          case 1:\n           code_btn2\n          break;\n          case 2:\n           code_btn3\n          break;\n          case 3:\n           code_btn4\n          break;  \n          case 4:\n           code_btn5\n          break;\n        }      \n      }\n    }\n  }\n";return __p},this.JST.bq_buttons_definitions=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="//bqButtons\n  int adc_key_val[5] ={20,50, 100, 200, 600 };\n  int NUM_KEYS = 5;\n  int adc_key_in;\n  int key=-1;\n  int oldkey=-1;\n  int get_key(unsigned int input)\n  {\n    int k;\n    for (k = 0; k < NUM_KEYS; k++)\n    {\n      if (input < adc_key_val[k])\n      {\n        return k;\n      }\n    }\n    if (k >= NUM_KEYS)k = -1;\n      return k;\n  }\n";return __p},this.JST.bq_infrared=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.bq_infrared_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(dropdown_pin)+" , INPUT);";return __p},this.JST.bq_joystick=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.bq_led=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite("+__e(dropdown_pin)+","+__e(dropdown_stat)+");\n";return __p},this.JST.bq_led_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.bq_photoresistor=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.bq_piezo_buzzer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(dropdown_stat)+","+__e(delay_time)+");\n\n";return __p},this.JST.bq_piezo_buzzerav=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(Buzztone)+","+__e(delay_time)+");\ndelay("+__e(delay_time)+");\n\n";return __p},this.JST.bq_potentiometer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.controls_forEach=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="for (var "+__e(variable0)+" in "+__e(argument0)+") {\n "+__e(branch)+" }\n";return __p},this.JST.controls_else=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="else {\n"+__e(branch)+"\n}";return __p},this.JST.controls_elseif=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="else if ("+__e(argument)+") {\n"+__e(branch)+"\n}";return __p},this.JST.controls_if=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="if ("+__e(argument)+") {\n"+__e(branch)+"\n}";return __p},this.JST.controls_repeat=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="for("+__e(loopVar)+"=0; "+__e(loopVar)+"<"+__e(repeats)+"; "+__e(loopVar)+"++){\n "+__e(branch)+" }\n";return __p},this.JST.controls_whileUntil=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="while ("+__e(argument0)+") {\n  "+__e(branch)+" }\n";return __p},this.JST.inout_analog_read=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.inout_analog_read_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT);\n";return __p},this.JST.inout_analog_write=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogWrite("+__e(dropdown_pin)+","+__e(value_num)+");\n";return __p},this.JST.inout_analog_write_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.inout_builtin_led=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite(13,"+__e(dropdown_stat)+");\n";return __p},this.JST.inout_builtin_led_setups=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="pinMode(13,OUTPUT);\n";return __p},this.JST.inout_digital_read=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.inout_digital_read_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT);\n";return __p},this.JST.inout_digital_write=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite("+__e(dropdown_pin)+","+__e(dropdown_stat)+");\n";return __p},this.JST.inout_digital_write_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.inout_highlow=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(bool_value);return __p},this.JST.logic_compare=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(argument0)+" "+__e(operator)+" "+__e(argument1);return __p},this.JST.logic_negate=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="!"+__e(argument0);return __p},this.JST.logic_operation=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(argument0)+" "+__e(operator)+" "+__e(argument1);
return __p},this.JST.math_arithmetic=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(argument0)+" "+__e(operator)+" "+__e(argument1);return __p},this.JST.math_arithmetic_pow=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pow("+__e(argument0)+","+__e(argument1)+")";return __p},this.JST.math_modulo=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(argument0)+"%"+__e(argument1);return __p},this.JST.math_random=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="random("+__e(value_num)+", "+__e(value_dmax)+")";return __p},this.JST.procedures_callnoreturn=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(funcName)+"("+__e(funcArgs)+");\n";return __p},this.JST.procedures_callreturn=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(funcName)+"("+__e(funcArgs)+")";return __p},this.JST.procedures_defnoreturn=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(returnType)+" "+__e(funcName)+" ("+__e(args)+") {\n  "+__e(branch)+" "+__e(returnValue)+" }\n";return __p},this.JST.procedures_defreturn=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(returnType)+" "+__e(funcName)+" ("+__e(args)+") {\n  "+__e(branch)+" "+__e(returnValue)+" }\n";return __p},this.JST.serial_available=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="if (Serial.available()>0){"+__e(branch)+"\n}\n";return __p},this.JST.serial_print=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.print("+__e(content)+");";return __p},this.JST.serial_print_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin("+__e(bitrate)+");\n";return __p},this.JST.serial_println=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.println("+__e(content)+");";return __p},this.JST.serial_println_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin("+__e(bitrate)+");\n";return __p},this.JST.serial_read=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="Serial.read()";return __p},this.JST.serial_read_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin("+__e(bitrate)+");\n";return __p},this.JST.serial_special=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(char);return __p},this.JST.servo_cont=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".write("+__e(value_degree)+");\ndelay("+__e(delay_time)+");\n";return __p},this.JST.servo_cont_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servo_"+__e(dropdown_pin)+";\n";return __p},this.JST.servo_cont_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".attach("+__e(dropdown_pin)+");";return __p},this.JST.servo_move=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".write("+__e(value_degree)+");\ndelay("+__e(delay_time)+");\n";return __p},this.JST.servo_move_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servo_"+__e(dropdown_pin)+";\n";return __p},this.JST.servo_move_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".attach("+__e(dropdown_pin)+");";return __p},this.JST.text_equalsIgnoreCase=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(string1)+".equalsIgnoreCase("+__e(string2)+")";return __p},this.JST.text_length=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(argument0)+" .length()";return __p},this.JST.text_substring=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(string1)+".substring("+__e(from)+","+__e(to)+")";return __p},this.JST.variables_set=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(varName)+"="+__e(varValue)+";";return __p},this.JST.zum_button=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")\n";return __p},this.JST.zum_button_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT_PULLUP);\n";return __p},this.JST.zum_follower=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="if(digitalRead("+__e(dropdown_pin)+")==HIGH)\n{\n  code_btn1\n}\nif(digitalRead("+__e(NextPIN)+")==HIGH)\n{\n  code_btn2\n}\n";return __p},this.JST.zum_follower_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(dropdown_pin)+" , INPUT);\n  pinMode( "+__e(NextPIN)+" , INPUT);\n";return __p},this.JST.zum_infrared=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.zum_infrared_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(dropdown_pin)+" , INPUT);";return __p},this.JST.zum_led=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite("+__e(dropdown_pin)+","+__e(dropdown_stat)+");\n";return __p},this.JST.zum_led_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.zum_photoresistor=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.zum_piezo_buzzer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(dropdown_stat)+","+__e(delay_time)+");\n\n";return __p},this.JST.zum_piezo_buzzerav=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(Buzztone)+","+__e(delay_time)+");\ndelay("+__e(delay_time)+");\n\n";return __p},this.JST.zum_potentiometer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p};var JST=this.JST;Blockly.Arduino.advanced_conversion=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=this.getFieldValue("CONV"),c=JST.advanced_conversion({value_num:a,convertion:b});return[c,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_conversion={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/advanced_conversion",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_CONVERSION_CONVERT).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ADVANCED_CONVERSION_DECIMAL,"DEC"],[RoboBlocks.LANG_ADVANCED_CONVERSION_HEXADECIMAL,"HEX"],[RoboBlocks.LANG_ADVANCED_CONVERSION_OCTAL,"OCT"],[RoboBlocks.LANG_ADVANCED_CONVERSION_BINARY,"BIN"]]),"CONV"),this.appendValueInput("NUM",Number).appendField(RoboBlocks.LANG_ADVANCED_CONVERSION_VALUE).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_ADVANCED_CONVERSION_TOOLTIP)}},Blockly.Arduino.advanced_map=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"FROM_MIN",Blockly.Arduino.ORDER_NONE),c=Blockly.Arduino.valueToCode(this,"FROM_MAX",Blockly.Arduino.ORDER_NONE),d=Blockly.Arduino.valueToCode(this,"TO_MIN",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"TO_MAX",Blockly.Arduino.ORDER_NONE),f=JST.advanced_map({num:a,from_min:b,from_max:c,to_min:d,to_max:e});return[f,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_map={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/advanced_map",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_MAP).setCheck(Number),this.appendValueInput("FROM_MIN",Number).appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_FROM).setCheck(Number),this.appendValueInput("FROM_MAX",Number).appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_HYPHEN).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_BRACKET),this.appendValueInput("TO_MIN",Number).appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_TO).setCheck(Number),this.appendValueInput("TO_MAX",Number).appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_HYPHEN).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.LANG_MATH_ADVANCED_MAP_BRACKET),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_MATH_ADVANCED_MAP_TOOLTIP)}},Blockly.Arduino.base_delay=function(){var a=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),b=JST.base_delay({delay_time:a});return b},Blockly.Blocks.base_delay={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/base_delay",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("DELAY_TIME",Number).appendField(RoboBlocks.LANG_CONTROLS_BASE_DELAY_WAIT).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_CONTROLS_BASE_DELAY_TOOLTIP)}},Blockly.Arduino.base_map=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),c=JST.base_map({value_num:a,value_dmax:b});return[c,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.base_map={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/base_map",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.LANG_MATH_BASE_MAP).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.LANG_MATH_BASE_MAP_VALUE_TO).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.LANG_MATH_BASE_MAP_BRACKET),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_MATH_BASE_MAP_TOOLTIP)}},Blockly.Arduino.bq_bat=function(){var a=Blockly.Arduino.valueToCode(this,"RED PIN",Blockly.Arduino.ORDER_ATOMIC),b=Blockly.Arduino.valueToCode(this,"BLUE PIN",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_bq_bat_=JST.bq_bat_setups({red_pin:a,blue_pin:b}),Blockly.Arduino.definitions_["define_bq_bat_"+a]=JST.bq_bat_definitions({red_pin:a,blue_pin:b});var c=JST.bq_bat({red_pin:a});return[c,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_bat={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","bat"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_bat",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendDummyInput("").appendField(RoboBlocks.LANG_BQ_BAT).appendField(new Blockly.FieldImage("img/blocks/bqmod09.png",208*options.zoom,140*options.zoom)),this.appendValueInput("RED PIN").appendField(RoboBlocks.LANG_BQ_BAT_RED_PIN).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("BLUE PIN").appendField(RoboBlocks.LANG_BQ_BAT_BLUE_PIN).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_BQ_BAT_TOOLTIP)}},Blockly.Arduino.bq_bluetooth_slave=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=Blockly.Arduino.valueToCode(this,"PIN2",Blockly.Arduino.ORDER_ATOMIC),c=this.getFieldValue("NAME"),d=this.getFieldValue("PINCODE"),e=Blockly.Arduino.statementToCode(this,"RCV"),f=Blockly.Arduino.statementToCode(this,"SNT");Blockly.Arduino.definitions_.define_softwareserial=JST.bq_bluetooth_slave_definitions({dropdown_pin:a,NextPIN:b,name:c,pincode:d}),Blockly.Arduino.setups_.setup_bluetooth_=JST.bq_bluetooth_slave_setups({dropdown_pin:a,NextPIN:b});var g=JST.bq_bluetooth_slave({dropdown_pin:a,NextPIN:b,name:c,pincode:d,statement_send:f,statement_receive:e});return g},Blockly.Blocks.bq_bluetooth_slave={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","bluetooth"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_bluetooth_slave",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendDummyInput().appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE).appendField(new Blockly.FieldImage("img/blocks/bqmod03.png",208*options.zoom,100*options.zoom)),this.appendValueInput("PIN").setCheck(Number).appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_PIN1).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("PIN2").setCheck(Number).appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_PIN2).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_NAME).appendField(new Blockly.FieldTextInput("zum"),"NAME").setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_PINCODE).appendField(new Blockly.FieldTextInput("0000"),"PINCODE").setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("RCV").appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_RECEIVE).setAlign(Blockly.ALIGN_RIGHT),this.appendStatementInput("SNT").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_SEND),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_BQ_BLUETOOTH_SLAVE_TOOLTIP)}},Blockly.Arduino.bq_button=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_["setup_button_"+a]=JST.bq_button_setups({dropdown_pin:a});var b=JST.bq_button({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_button={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","button"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_button",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_BUTTON).appendField(new Blockly.FieldImage("img/blocks/bqmod05.png",212*options.zoom,139*options.zoom)).setCheck(Number).appendField(RoboBlocks.LANG_BQ_BUTTON_PIN).setAlign(Blockly.ALIGN_RIGHT),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.LANG_BQ_BUTTON_TOOLTIP)}},Blockly.Arduino.bq_buttons=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.definitions_.define_buttons=JST.bq_buttons_definitions({dropdown_pin:a});var b=JST.bq_buttons({dropdown_pin:a});return b},Blockly.Blocks.bq_buttons={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","buttons"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_buttons",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_BUTTONS).appendField(new Blockly.FieldImage("img/blocks/bqmod10.png",336*options.zoom,176*options.zoom)).appendField(RoboBlocks.LANG_BQ_BUTTONS_PIN).setCheck(Number),this.appendStatementInput("BUTN1").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_BUTTONS_BUTTON_A),this.appendStatementInput("BUTN2").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_BUTTONS_BUTTON_B),this.appendStatementInput("BUTN3").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_BUTTONS_BUTTON_C),this.appendStatementInput("BUTN4").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_BUTTONS_BUTTON_D),this.appendStatementInput("BUTN5").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_BUTTONS_BUTTON_E),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_BQ_BUTTONS_TOOLTIP)}},Blockly.Arduino.bq_infrared=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_["setup_infrared_"+a]=JST.bq_infrared_setups({dropdown_pin:a});var b=JST.bq_infrared({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_infrared={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","infrared"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_infrared",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_INFRARED).appendField(new Blockly.FieldImage("img/blocks/bqmod04.png",208*options.zoom,126*options.zoom)).appendField(RoboBlocks.LANG_BQ_INFRARED_PIN).setCheck(Number),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_BQ_INFRARED_TOOLTIP)}},Blockly.Arduino.bq_joystick=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=JST.bq_joystick({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_joystick={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","joystick"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_joystick",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_JOYSTICK).appendField(new Blockly.FieldImage("img/blocks/bqmod11.png",209*options.zoom,277*options.zoom)).appendField(RoboBlocks.LANG_BQ_JOYSTICK_PIN).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_BQ_JOYSTICK_TOOLTIP)}},Blockly.Arduino.bq_led=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_green_led_"+a]=JST.bq_led_setups({dropdown_pin:a,dropdown_stat:b});var c=JST.bq_led({dropdown_pin:a,dropdown_stat:b});return c},Blockly.Blocks.bq_led={category:RoboBlocks.LANG_CATEGORY_BQ,tag:["bq","led"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_led",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_LED).appendField(new Blockly.FieldImage("img/blocks/bqmod02.png",208*options.zoom,140*options.zoom)).appendField(RoboBlocks.LANG_BQ_LED_PIN).setCheck(Number),this.appendDummyInput("").appendField(RoboBlocks.LANG_BQ_LED_STATE).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_BQ_LED_ON,"HIGH"],[RoboBlocks.LANG_BQ_LED_OFF,"LOW"]]),"STAT").setAlign(Blockly.ALIGN_RIGHT),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_BQ_LED_TOOLTIP)}},Blockly.Arduino.bq_photoresistor=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=JST.bq_photoresistor({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_photoresistor={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","photoresistor"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_photoresistor",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_PHOTORESISTOR).appendField(new Blockly.FieldImage("img/blocks/bqmod01.png",208*options.zoom,140*options.zoom)).appendField(RoboBlocks.LANG_BQ_PHOTORESISTOR_PIN).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_BQ_PHOTORESISTOR_TOOLTIP)}},Blockly.Arduino.bq_piezo_buzzer=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=this.getFieldValue("STAT")||"",c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC)||"",d=JST.bq_piezo_buzzer({dropdown_pin:a,dropdown_stat:b,delay_time:c});return d="tone("+a+","+b+","+c+");\ndelay("+c+");\n"},Blockly.Blocks.bq_piezo_buzzer={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","buzzer"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_piezo_buzzer",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendDummyInput("").appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZER).appendField(new Blockly.FieldImage("img/blocks/bqmod07.png",208*options.zoom,140*options.zoom)),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZER_PIN).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput("").appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZER_TONE).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_BQ_PIEZO_BUZZER_DO,"261"],[RoboBlocks.LANG_BQ_PIEZO_BUZZER_RE,"293"],[RoboBlocks.LANG_BQ_PIEZO_BUZZER_MI,"329"],[RoboBlocks.LANG_BQ_PIEZO_BUZZER_FA,"349"],[RoboBlocks.LANG_BQ_PIEZO_BUZZER_SOL,"392"],[RoboBlocks.LANG_BQ_PIEZO_BUZZER_LA,"440"],[RoboBlocks.LANG_BQ_PIEZO_BUZZER_SI,"494"]]),"STAT").setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZER_DURATION),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_BQ_PIEZO_BUZZER_TOOLTIP)}},Blockly.Arduino.bq_piezo_buzzerav=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=Blockly.Arduino.valueToCode(this,"TONE",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.bq_piezo_buzzerav({dropdown_pin:a,Buzztone:b,delay_time:c});return d},Blockly.Blocks.bq_piezo_buzzerav={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","advanced buzzer"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_piezo_buzzerav",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZERAV).appendField(new Blockly.FieldImage("img/blocks/bqmod08.png",208*options.zoom,140*options.zoom)).appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_PIN).setCheck(Number),this.appendValueInput("TONE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_TONE),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_DURATION),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_BQ_PIEZO_BUZZERAV_TOOLTIP)}},Blockly.Arduino.bq_potentiometer=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=JST.bq_potentiometer({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_potentiometer={category:RoboBlocks.LANG_CATEGORY_BQ,tags:["bq","potentiometer"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/bq_potentiometer",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_BQ),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_BQ_POTENTIOMETER).appendField(new Blockly.FieldImage("img/blocks/bqmod06.png",208*options.zoom,139*options.zoom)).appendField(RoboBlocks.LANG_BQ_POTENTIOMETER_PIN).setCheck(Number),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_BQ_POTENTIOMETER_TOOLTIP)}},Blockly.Arduino.controls_flow_statements=function(){switch(this.getFieldValue("FLOW")){case"BREAK":return"break;\n";case"CONTINUE":return"continue;\n"}throw"Unknown flow statement."},Blockly.Blocks.controls_flow_statements={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_flow_statements",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL);var a=new Blockly.FieldDropdown([[RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK,"BREAK"],[RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE,"CONTINUE"]]);this.appendDummyInput().appendField(a,"FLOW").appendField(RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP),this.setPreviousStatement(!0);var b=this;this.setTooltip(function(){var a=b.getFieldValue("FLOW");return Blockly.Blocks.controls_flow_statements.TOOLTIPS[a]})},onchange:function(){if(this.workspace){var a=!1,b=this;do{if("controls_repeat"===b.type||"controls_forEach"===b.type||"controls_for"===b.type||"controls_whileUntil"===b.type){a=!0;break}b=b.getSurroundParent()}while(b);if(a)this.setWarningText(null);else try{this.setWarningText(RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_WARNING)}catch(c){console.log("Captured error: ",c)}}}},Blockly.Blocks.controls_flow_statements.TOOLTIPS={BREAK:RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK,CONTINUE:RoboBlocks.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE},Blockly.Arduino.controls_for=function(){var a=this.getFieldValue("VAR")||"",b=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"",c=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"",d=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(d=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+d);var e,f=parseFloat(b)<=parseFloat(c);return e="for ("+a+" = "+b+"; "+a+(f?" <= ":" >= ")+c+"; "+a+(f?"++":"--")+") {\n"+d+"}\n"},Blockly.Blocks.controls_for={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_for",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.LANG_CONTROLS_FOR_INPUT_WITH).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.appendValueInput("FROM").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_CONTROLS_FOR_INPUT_FROM),this.appendValueInput("TO").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_CONTROLS_FOR_INPUT_TO),this.appendStatementInput("DO").appendField(RoboBlocks.LANG_CONTROLS_FOR_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setInputsInline(!0);var a=this;this.setTooltip(function(){return RoboBlocks.LANG_CONTROLS_FOR_TOOLTIP.replace("%1",a.getFieldValue("VAR"))})},getVars:function(){return[this.getFieldValue("VAR")]},getVariables:function(){var a=Blockly.Variables.allVariables(),b=[];if(a.length>0)for(var c in a)b.push([a[c],a[c]]);else b.push(["",""]);return b},onchange:function(){this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var a=Blockly.Variables.allVariables();for(var b in a)if(Blockly.Variables.allVariables()[b]!==this.last_variables[b]){try{this.removeInput("DUMMY"),this.removeInput("VALUE"),this.appendDummyInput("DUMMY").appendField(RoboBlocks.LANG_VARIABLES_SET).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.appendValueInput("VALUE").appendField(RoboBlocks.LANG_VARIABLES_SET_AS).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0)}catch(c){}this.last_variables=Blockly.Variables.allVariables()}},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setTitleValue(b,"VAR")}},Blockly.Arduino.controls_forEach=function(){var a=this.getFieldValue("VAR")||"",b=Blockly.Arduino.valueToCode(this,"LIST",Blockly.Arduino.ORDER_ASSIGNMENT)||"[]",c=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(c=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+c);var d=JST.controls_forEach({variable0:a,argument0:b,branch:c});return d},Blockly.Blocks.controls_forEach={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_forEach",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("LIST").setCheck(Array).appendField(RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_ITEM).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR").appendField(RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_INLIST),this.appendStatementInput("DO").appendField(RoboBlocks.LANG_CONTROLS_FOREACH_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0);var a=this;this.setTooltip(function(){return RoboBlocks.LANG_CONTROLS_FOREACH_TOOLTIP.replace("%1",a.getTitleValue("VAR"))})},getVars:function(){return[this.getTitleValue("VAR")]},getVariables:function(){var a=Blockly.Variables.allVariables(),b=[];if(a.length>0)for(var c in a)b.push([a[c],a[c]]);else b.push(["",""]);return b},onchange:function(){this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var a=Blockly.Variables.allVariables();for(var b in a)if(Blockly.Variables.allVariables()[b]!==this.last_variables[b]){try{this.removeInput("DUMMY"),this.removeInput("VALUE"),this.appendDummyInput("DUMMY").appendField(RoboBlocks.LANG_VARIABLES_SET).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.appendValueInput("VALUE").appendField(RoboBlocks.LANG_VARIABLES_SET_AS).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0)}catch(c){}this.last_variables=Blockly.Variables.allVariables()}},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setTitleValue(b,"VAR")}},Blockly.Arduino.controls_if=function(){var a=0,b=Blockly.Arduino.valueToCode(this,"IF"+a,Blockly.Arduino.ORDER_NONE),c=Blockly.Arduino.statementToCode(this,"DO"+a),d=JST.controls_if({argument:b,branch:c});for(a=1;a<=this.elseifCount_;a++)b=Blockly.Arduino.valueToCode(this,"IF"+a,Blockly.Arduino.ORDER_NONE),c=Blockly.Arduino.statementToCode(this,"DO"+a),d=JST.controls_elseif({argument:b,branch:c});return this.elseCount_&&(c=Blockly.Arduino.statementToCode(this,"ELSE"),d=JST.controls_else({argument:b,branch:c})),d+"\n"},Blockly.Blocks.controls_if={category:RoboBlocks.LANG_CATEGORY_CONTROLS,tags:["bq"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_if",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_IF),this.appendStatementInput("DO0").appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_THEN),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));var a=this;this.setTooltip(function(){return a.elseifCount_||a.elseCount_?!a.elseifCount_&&a.elseCount_?RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_2:a.elseifCount_&&!a.elseCount_?RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_3:a.elseifCount_&&a.elseCount_?RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_4:"":RoboBlocks.LANG_CONTROLS_IF_TOOLTIP_1}),this.elseifCount_=0,this.elseCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var a=document.createElement("mutation");return this.elseifCount_&&a.setAttribute("elseif",this.elseifCount_),this.elseCount_&&a.setAttribute("else",1),a},domToMutation:function(a){this.elseifCount_=window.parseInt(a.getAttribute("elseif"),10),this.elseCount_=window.parseInt(a.getAttribute("else"),10);for(var b=1;b<=this.elseifCount_;b++)this.appendValueInput("IF"+b).setCheck(Boolean).appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_ELSEIF),this.appendStatementInput("DO"+b).appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_THEN);this.elseCount_&&this.appendStatementInput("ELSE").appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_ELSE)},decompose:function(a){var b=Blockly.Block.obtain(a,"controls_if_if");b.initSvg();for(var c=b.getInput("STACK").connection,d=1;d<=this.elseifCount_;d++){var e=Blockly.Block.obtain(a,"controls_if_elseif");e.initSvg(),c.connect(e.previousConnection),c=e.nextConnection}if(this.elseCount_){var f=Blockly.Block.obtain(a,"controls_if_else");f.initSvg(),c.connect(f.previousConnection)}return b},compose:function(a){this.elseCount_&&this.removeInput("ELSE"),this.elseCount_=0;for(var b=this.elseifCount_;b>0;b--)this.removeInput("IF"+b),this.removeInput("DO"+b);this.elseifCount_=0;for(var c=a.getInputTargetBlock("STACK");c;){switch(c.type){case"controls_if_elseif":this.elseifCount_++;var d=this.appendValueInput("IF"+this.elseifCount_).setCheck(Boolean).appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_ELSEIF),e=this.appendStatementInput("DO"+this.elseifCount_);e.appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_THEN),c.valueConnection_&&d.connection.connect(c.valueConnection_),c.statementConnection_&&e.connection.connect(c.statementConnection_);break;case"controls_if_else":this.elseCount_++;var f=this.appendStatementInput("ELSE");f.appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_ELSE),c.statementConnection_&&f.connection.connect(c.statementConnection_);break;default:throw"Unknown block type."}c=c.nextConnection&&c.nextConnection.targetBlock()}},saveConnections:function(a){for(var b=a.getInputTargetBlock("STACK"),c=1;b;){switch(b.type){case"controls_if_elseif":var d=this.getInput("IF"+c),e=this.getInput("DO"+c);b.valueConnection_=d&&d.connection.targetConnection,b.statementConnection_=e&&e.connection.targetConnection,c++;break;case"controls_if_else":e=this.getInput("ELSE"),b.statementConnection_=e&&e.connection.targetConnection;break;default:throw"Unknown block type."}b=b.nextConnection&&b.nextConnection.targetBlock()}}},Blockly.Blocks.controls_if_if={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.LANG_CONTROLS_IF_IF_Field_IF),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.LANG_CONTROLS_IF_IF_TOOLTIP),this.contextMenu=!1}},Blockly.Blocks.controls_if_elseif={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_CONTROLS_IF_ELSEIF_TOOLTIP),this.contextMenu=!1
}},Blockly.Blocks.controls_if_else={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.LANG_CONTROLS_IF_ELSE_Field_ELSE),this.setPreviousStatement(!0),this.setTooltip(RoboBlocks.LANG_CONTROLS_IF_ELSE_TOOLTIP),this.contextMenu=!1}},Blockly.Arduino.controls_repeat=function(){var a=Number(this.getFieldValue("TIMES")),b=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(b=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);var c=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE),d=JST.controls_repeat({repeats:a,branch:b,loopVar:c});return d},Blockly.Blocks.controls_repeat={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_repeat",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField(RoboBlocks.LANG_CONTROLS_REPEAT_TITLE_REPEAT).appendField(new Blockly.FieldTextInput("",Blockly.Blocks.math_number.validator),"TIMES").appendField(RoboBlocks.LANG_CONTROLS_REPEAT_TITLE_TIMES),this.appendStatementInput("DO").appendField(RoboBlocks.LANG_CONTROLS_REPEAT_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_CONTROLS_REPEAT_TOOLTIP)}},Blockly.Arduino.controls_switch=function(){var a=0,b=Blockly.Arduino.valueToCode(this,"IF0",Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(this,"DO"+a),d="switch ("+b+")\n{";for(a=1;a<=this.switchCount_;a++)b=Blockly.Arduino.valueToCode(this,"SWITCH"+a,Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(this,"DO"+a),d+=" \n  case "+b+": \n  {\n"+c+"  break;\n  }";return this.defaultCount_&&(c=Blockly.Arduino.statementToCode(this,"DEFAULT"),d+="  \n  default:\n  {\n"+c+"  }"),d+"\n}"},Blockly.Blocks.controls_switch={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_switch",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("IF0").setCheck(Boolean).appendField("switch"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setMutator(new Blockly.Mutator(["controls_switch_case","controls_switch_default"]));var a=this;this.setTooltip(function(){return a.switchCount_||a.defaultCount_?!a.switchCount_&&a.defaultCount_?RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_2:a.switchCount_&&!a.defaultCount_?RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_3:a.switchCount_&&a.defaultCount_?RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_4:"":RoboBlocks.LANG_CONTROLS_SWITCH_TOOLTIP_1}),this.switchCount_=0,this.defaultCount_=0},mutationToDom:function(){if(!this.switchCount_&&!this.defaultCount_)return null;var a=document.createElement("mutation");return this.switchCount_&&a.setAttribute("case",this.switchCount_),this.defaultCount_&&a.setAttribute("default",1),a},domToMutation:function(a){this.switchCount_=window.parseInt(a.getAttribute("case"),10),this.defaultCount_=window.parseInt(a.getAttribute("default"),10);for(var b=1;b<=this.switchCount_;b++)this.appendValueInput("SWITCH"+b).setCheck(Number).appendField("case"),this.setInputsInline(!0),this.appendStatementInput("DO"+b).appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_THEN);this.defaultCount_&&this.appendStatementInput("DEFAULT").appendField("default")},decompose:function(a){var b=Blockly.Block.obtain(a,"controls_switch_switch");b.initSvg();for(var c=b.getInput("STACK").connection,d=1;d<=this.switchCount_;d++){var e=Blockly.Block.obtain(a,"controls_switch_case");e.initSvg(),c.connect(e.previousConnection),c=e.nextConnection}if(this.defaultCount_){var f=Blockly.Block.obtain(a,"controls_switch_default");f.initSvg(),c.connect(f.previousConnection)}return b},compose:function(a){this.defaultCount_&&this.removeInput("DEFAULT"),this.defaultCount_=0;for(var b=this.switchCount_;b>0;b--)this.removeInput("SWITCH"+b),this.removeInput("DO"+b);this.switchCount_=0;for(var c=a.getInputTargetBlock("STACK");c;){switch(c.type){case"controls_switch_case":this.switchCount_++;var d=this.appendValueInput("SWITCH"+this.switchCount_).setCheck(Number).appendField("case");this.setInputsInline(!0);var e=this.appendStatementInput("DO"+this.switchCount_);e.appendField("do"),c.valueConnection_&&d.connection.connect(c.valueConnection_),c.statementConnection_&&e.connection.connect(c.statementConnection_);break;case"controls_switch_default":this.defaultCount_++;var f=this.appendStatementInput("DEFAULT");f.appendField("default"),c.statementConnection_&&f.connection.connect(c.statementConnection_);break;default:throw"Unknown block type."}c=c.nextConnection&&c.nextConnection.targetBlock()}},saveConnections:function(a){for(var b=a.getInputTargetBlock("STACK"),c=1;b;){switch(b.type){case"controls_switch_case":var d=this.getInput("SWITCH"+c),e=this.getInput("DO"+c);b.valueConnection_=d&&d.connection.targetConnection,b.statementConnection_=e&&e.connection.targetConnection,c++;break;case"controls_switch_default":e=this.getInput("DEFAULT"),b.statementConnection_=e&&e.connection.targetConnection;break;default:throw"Unknown block type."}b=b.nextConnection&&b.nextConnection.targetBlock()}}},Blockly.Blocks.controls_switch_switch={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField("switch"),this.appendStatementInput("STACK"),this.setTooltip("Switch"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_case={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField("case"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Switch case"),this.contextMenu=!1}},Blockly.Blocks.controls_switch_default={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendDummyInput().appendField("default"),this.setPreviousStatement(!0),this.setTooltip("Switch default"),this.contextMenu=!1}},Blockly.Arduino.controls_whileUntil=function(){var a=Blockly.Arduino.valueToCode(this,"BOOL",Blockly.Arduino.ORDER_NONE)||"",b=Blockly.Arduino.statementToCode(this,"DO");Blockly.Arduino.INFINITE_LOOP_TRAP&&(b=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b),"UNTIL"===this.getFieldValue("MODE")&&(a.match(/^\w+$/)||(a="("+a+")"),a="!"+a);var c=JST.controls_whileUntil({argument0:a,branch:b});return c},Blockly.Blocks.controls_whileUntil={category:RoboBlocks.LANG_CATEGORY_CONTROLS,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/controls_whileUntil",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_CONTROL),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT).appendField(new Blockly.FieldDropdown(this.OPERATORS),"MODE"),this.appendStatementInput("DO").appendField(RoboBlocks.LANG_CONTROLS_WHILEUNTIL_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("MODE");return Blockly.Blocks.controls_whileUntil.TOOLTIPS[b]})}},Blockly.Blocks.controls_whileUntil.OPERATORS=[[RoboBlocks.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE,"WHILE"],[RoboBlocks.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL,"UNTIL"]],Blockly.Blocks.controls_whileUntil.TOOLTIPS={WHILE:RoboBlocks.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE,UNTIL:RoboBlocks.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL},Blockly.Arduino.inout_analog_read=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_green_analog_read"+a]=JST.inout_analog_read_setups({dropdown_pin:a});var b=JST.inout_analog_read({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_analog_read={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/inout_analog_read",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_READ).appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP)}},Blockly.Arduino.inout_analog_write=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_green_analog_write_13=JST.inout_analog_write_setups({dropdown_pin:a,value_num:b});var c=JST.inout_analog_write({dropdown_pin:a,value_num:b});return c},Blockly.Blocks.inout_analog_write={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/inout_analog_write",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_WRITE).appendField(new Blockly.FieldDropdown(profiles.default.pwm),"PIN"),this.appendValueInput("NUM",Number).appendField(RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE).setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP)}},Blockly.Arduino.inout_builtin_led=function(){var a=this.getFieldValue("STAT");Blockly.Arduino.setups_.setup_green_led_13=JST.inout_builtin_led_setups({});var b=JST.inout_builtin_led({dropdown_stat:a});return b},Blockly.Blocks.inout_builtin_led={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/inout_builtin_led",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_BUILTIN_LED).appendField(RoboBlocks.LANG_ADVANCED_BUILTIN_LED_STATE).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ADVANCED_BUILTIN_LED_ON,"HIGH"],[RoboBlocks.LANG_ADVANCED_BUILTIN_LED_OFF,"LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ADVANCED_BUILTIN_LED_TOOLTIP)}},Blockly.Arduino.inout_digital_read=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_green_digital_read"+a]=JST.inout_digital_read_setups({dropdown_pin:a});var b=JST.inout_digital_read({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_digital_read={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/inout_digital_read",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_READ).appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP)}},Blockly.Arduino.inout_digital_write=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_.setup_green_digital_write_13=JST.inout_digital_write_setups({dropdown_pin:a,dropdown_stat:b});var c=JST.inout_digital_write({dropdown_pin:a,dropdown_stat:b});return c},Blockly.Blocks.inout_digital_write={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/inout_digital_write",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE).appendField(RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN).appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField(RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH,"HIGH"],[RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW,"LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP)}},Blockly.Arduino.inout_highlow=function(){var a=this.getFieldValue("BOOL"),b=JST.inout_highlow({bool_value:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_highlow={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/inout_highlow",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ADVANCED_HIGHLOW_HIGH,"HIGH"],[RoboBlocks.LANG_ADVANCED_HIGHLOW_LOW,"LOW"]]),"BOOL"),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.LANG_ADVANCED_HIGHLOW_TOOLTIP)}},Blockly.Arduino.logic_boolean=function(){var a="TRUE"===this.getFieldValue("BOOL")?"true":"false";return[a,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_boolean={category:RoboBlocks.LANG_CATEGORY_LOGIC,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/logic_boolean",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendDummyInput().appendField(new Blockly.FieldDropdown(this.OPERATORS),"BOOL"),this.setTooltip(RoboBlocks.LANG_LOGIC_BOOLEAN_TOOLTIP)}},Blockly.Blocks.logic_boolean.OPERATORS=[[RoboBlocks.LANG_LOGIC_BOOLEAN_TRUE,"TRUE"],[RoboBlocks.LANG_LOGIC_BOOLEAN_FALSE,"FALSE"]],Blockly.Arduino.logic_compare=function(){var a=this.getFieldValue("OP"),b=Blockly.Arduino.logic_compare.OPERATORS[a],c="=="===b||"!="===b?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,d=Blockly.Arduino.valueToCode(this,"A",c)||"0",e=Blockly.Arduino.valueToCode(this,"B",c)||"0",f=JST.logic_compare({argument0:d,argument1:e,operator:b});return[f,c]},Blockly.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="},Blockly.Blocks.logic_compare={category:RoboBlocks.LANG_CATEGORY_LOGIC,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/logic_compare",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A"),this.appendValueInput("B").appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.logic_compare.TOOLTIPS[b]})}},Blockly.Blocks.logic_compare.OPERATORS=[["=","EQ"],["≠","NEQ"],["<","LT"],["≤","LTE"],[">","GT"],["≥","GTE"]],Blockly.Blocks.logic_compare.TOOLTIPS={EQ:RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_EQ,NEQ:RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_NEQ,LT:RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_LT,LTE:RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_LTE,GT:RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_GT,GTE:RoboBlocks.LANG_LOGIC_COMPARE_TOOLTIP_GTE},Blockly.Arduino.logic_negate=function(){var a=Blockly.Arduino.ORDER_UNARY_PREFIX,b=Blockly.Arduino.valueToCode(this,"BOOL",a)||"false",c=JST.logic_negate({argument0:b});return[c,a]},Blockly.Blocks.logic_negate={category:RoboBlocks.LANG_CATEGORY_LOGIC,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/logic_negate",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("BOOL").setCheck(Boolean).appendField(RoboBlocks.LANG_LOGIC_NEGATE_INPUT_NOT),this.setTooltip(RoboBlocks.LANG_LOGIC_NEGATE_TOOLTIP)}},Blockly.Arduino.logic_null=function(){var a="NULL";return[a,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.logic_null={category:RoboBlocks.LANG_CATEGORY_LOGIC,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/logic_null",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,null),this.appendDummyInput().appendField(RoboBlocks.LANG_LOGIC_NULL),this.setTooltip(RoboBlocks.LANG_LOGIC_NULL_TOOLTIP)}},Blockly.Arduino.logic_operation=function(){var a="AND"===this.getFieldValue("OP")?"&&":"||",b="&&"===a?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,c=Blockly.Arduino.valueToCode(this,"A",b)||"",d=Blockly.Arduino.valueToCode(this,"B",b)||"",e=JST.logic_operation({operator:a,argument0:c,argument1:d});return[e,b]},Blockly.Blocks.logic_operation={category:RoboBlocks.LANG_CATEGORY_LOGIC,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/logic_operation",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_LOGIC),this.setOutput(!0,Boolean),this.appendValueInput("A").setCheck(Boolean),this.appendValueInput("B").setCheck(Boolean).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.logic_operation.TOOLTIPS[b]})}},Blockly.Blocks.logic_operation.OPERATORS=[[RoboBlocks.LANG_LOGIC_OPERATION_AND,"AND"],[RoboBlocks.LANG_LOGIC_OPERATION_OR,"OR"]],Blockly.Blocks.logic_operation.TOOLTIPS={AND:RoboBlocks.LANG_LOGIC_OPERATION_TOOLTIP_AND,OR:RoboBlocks.LANG_LOGIC_OPERATION_TOOLTIP_OR},Blockly.Arduino.math_arithmetic=function(){var a,b=this.getFieldValue("OP"),c=Blockly.Arduino.math_arithmetic.OPERATORS[b],d=c[0],e=c[1],f=Blockly.Arduino.valueToCode(this,"A",e)||"",g=Blockly.Arduino.valueToCode(this,"B",e)||"";return d?(a=JST.math_arithmetic({argument0:f,argument1:g,operator:d}),[a,e]):(a=JST.math_arithmetic_pow({argument0:f,argument1:g}),[a,Blockly.Arduino.ORDER_UNARY_POSTFIX])},Blockly.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_arithmetic={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/math_arithmetic",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("A").setCheck(Number),this.appendValueInput("B").setCheck(Number).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP"),this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getFieldValue("OP");return Blockly.Blocks.math_arithmetic.TOOLTIPS[b]})}},Blockly.Blocks.math_arithmetic.OPERATORS=[["+","ADD"],["-","MINUS"],["×","MULTIPLY"],["÷","DIVIDE"],["^","POWER"]],Blockly.Blocks.math_arithmetic.TOOLTIPS={ADD:RoboBlocks.LANG_MATH_ARITHMETIC_TOOLTIP_ADD,MINUS:RoboBlocks.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS,MULTIPLY:RoboBlocks.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY,DIVIDE:RoboBlocks.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE,POWER:RoboBlocks.LANG_MATH_ARITHMETIC_TOOLTIP_POWER},Blockly.Arduino.math_modulo=function(){var a=Blockly.Arduino.valueToCode(this,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",b=Blockly.Arduino.valueToCode(this,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"",c=JST.math_modulo({argument0:a,argument1:b});return[c,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_modulo={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/math_modulo",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("DIVIDEND").setCheck(Number).appendField(RoboBlocks.LANG_MATH_MODULO_INPUT_DIVIDEND),this.appendValueInput("DIVISOR").setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("%"),this.setInputsInline(!0),this.setTooltip(RoboBlocks.LANG_MATH_MODULO_TOOLTIP)}},Blockly.Blocks.math_number.validator=function(a){var b=window.parseFloat(a||0);return window.isNaN(b)?null:String(b)},Blockly.Arduino.math_number=function(){var a=window.parseFloat(this.getFieldValue("NUM")),b=0>a?Blockly.Arduino.ORDER_UNARY_PREFIX:Blockly.Arduino.ORDER_ATOMIC;return[a,b]},Blockly.Blocks.math_number={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/math_number",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendDummyInput().appendField(new Blockly.FieldTextInput("0",Blockly.Blocks.math_number.validator),"NUM"),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_MATH_NUMBER_TOOLTIP)}},Blockly.Arduino.math_random=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),c=JST.math_random({value_num:a,value_dmax:b});return[c,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_random={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/math_random",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField(RoboBlocks.LANG_ADVANCED_MATH_RANDOM).setCheck(Number),this.appendValueInput("DMAX",Number).appendField(RoboBlocks.LANG_ADVANCED_MATH_RANDOM_AND).setCheck(Number),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_ADVANCED_MATH_RANDOM_TOOLTIP)}},Blockly.Arduino.math_single=function(){var a,b,c=this.getTitleValue("OP");if("NEG"===c)return b=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"","-"===b[0]&&(b=" "+b),a="-"+b,[a,Blockly.Arduino.ORDER_UNARY_PREFIX];b="ABS)"===c?Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"":"SIN"===c||"COS"===c||"TAN"===c?Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"":Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE)||"";var d=3.14159;switch(c){case"ABS":a=b+".abs()";break;case"ROOT":a="sqrt("+b+")";break;case"LN":a="log("+b+")";break;case"EXP":a="exp("+b+")";break;case"POW10":a="pow(10,"+b+")";break;case"SIN":a="sin("+b+" / 180 * "+d+")";break;case"COS":a="cos("+b+" / 180 * "+d+")";break;case"TAN":a="tan("+b+" / 180 * "+d+")"}if(a)return[a,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(c){case"LOG10":a="log("+b+") / log(10)";break;case"ASIN":a="asin("+b+") / "+d+" * 180";break;case"ACOS":a="acos("+b+") / "+d+" * 180";break;case"ATAN":a="atan("+b+") / "+d+" * 180";break;default:throw"Unknown math operator: "+c}return[a,Blockly.Arduino.ORDER_MULTIPLICATIVE]},Blockly.Blocks.math_single={category:RoboBlocks.LANG_CATEGORY_MATH,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/math_single",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_MATH),this.setOutput(!0,Number),this.appendValueInput("NUM").setCheck(Number).appendField(new Blockly.FieldDropdown(this.OPERATORS),"OP");var a=this;this.setTooltip(function(){var b=a.getTitleValue("OP");return Blockly.Blocks.math_single.TOOLTIPS[b]})}},Blockly.Blocks.math_single.OPERATORS=[[RoboBlocks.LANG_MATH_SINGLE_OP_ROOT,"ROOT"],[RoboBlocks.LANG_MATH_SINGLE_OP_ABSOLUTE,"ABS"],["-","NEG"],["ln","LN"],["log10","LOG10"],["e^","EXP"],["10^","POW10"]],Blockly.Blocks.math_single.TOOLTIPS={ROOT:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_ROOT,ABS:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_ABS,NEG:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_NEG,LN:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_LN,LOG10:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_LOG10,EXP:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_EXP,POW10:RoboBlocks.LANG_MATH_SINGLE_TOOLTIP_POW10},Blockly.Arduino.pin_analog=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE);return[a,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_analog={category:RoboBlocks.LANG_CATEGORY_VARIABLES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/pin",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("").appendField("Analog pin").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_VARIABLES_PIN_TOOLTIP)}},Blockly.Arduino.pin_digital=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_NONE);return[a,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.pin_digital={category:RoboBlocks.LANG_CATEGORY_VARIABLES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/pin",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("").appendField("Digital pin").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_VARIABLES_PIN_TOOLTIP)}},Blockly.Arduino.procedures_callnoreturn=function(){for(var a=this.getFieldValue("PROCEDURES"),b=[],c=0;c<this.getVariables(a).length;c++)b[c]=Blockly.Arduino.valueToCode(this,"VARIABLES"+c,Blockly.Arduino.ORDER_NONE)||"";var d=b.join(", "),e=JST.procedures_callnoreturn({funcName:a,funcArgs:d});return e},Blockly.Blocks.procedures_callnoreturn={category:RoboBlocks.LANG_CATEGORY_PROCEDURES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/procedures_callnoreturn",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var a=new Blockly.FieldDropdown(this.getProcedures());this.appendDummyInput("DUMMY").appendField(a,"PROCEDURES"),this.addVariables(),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_PROCEDURES_CALLRETURN_TOOLTIP),this.arguments_=[],this.quarkConnections_=null,this.quarkArguments_=null},getProcedures:function(){var a=Blockly.Procedures.allProcedures(),b=[];if(a[0].length>0)for(var c in a[0])b.push([a[0][c][0],a[0][c][0]]);else b.push(["",""]);return b},renameProcedure:function(a){var b=this.getProcedures();for(var c in b)if(Blockly.Names.equals(a,b[c][0])){var d=new Blockly.FieldDropdown(this.getProcedures());this.removeInput("DUMMY"),this.appendDummyInput("DUMMY").appendField(d,"PROCEDURES")}this.addVariables()},onchange:function(){this.workspace&&(this.getFieldValue("PROCEDURES")!==this.no_last_procedure&&(this.addVariables(),this.no_last_procedure=this.getFieldValue("PROCEDURES")),this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))))},addVariables:function(){for(var a=this.getVariables(this.getFieldValue("PROCEDURES")),b=0;b<this.maxVariableNumber()&&null!==this.getInput("VARIABLES"+b);b++)this.removeInput("VARIABLES"+b);for(var c in a)this.appendValueInput("VARIABLES"+c).appendField(a[c])},maxVariableNumber:function(){var a=Blockly.Procedures.allProcedures(),b=[],c=0;if(a[0].length>0||a[1].length>0){for(var d in a[0])a[0][d][1].length>c&&(c=a[0][d][1].length);return c}b.push(["",""])},getVariables:function(a){var b=Blockly.Procedures.allProcedures(),c=[];if(b[0].length>0||b[1].length>0){for(var d in b[0])if(b[0][d][0]===a)return b[0][d][1]}else c.push(["",""])}},Blockly.Arduino.procedures_callreturn=function(){for(var a=this.getFieldValue("PROCEDURES"),b=[],c=0;c<this.getVariables(a).length;c++)b[c]=Blockly.Arduino.valueToCode(this,"VARIABLES"+c,Blockly.Arduino.ORDER_NONE)||"null";var d=b.join(", "),e=JST.procedures_callreturn({funcName:a,funcArgs:d});return[e,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.procedures_callreturn={category:RoboBlocks.LANG_CATEGORY_PROCEDURES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/procedures_callreturn",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var a=new Blockly.FieldDropdown(this.getProcedures());this.appendDummyInput("DUMMY").appendField(a,"PROCEDURES"),this.addVariables(),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_PROCEDURES_CALLRETURN_TOOLTIP),this.arguments_=[],this.quarkConnections_=null,this.quarkArguments_=null},getProcedures:function(){var a=Blockly.Procedures.allProcedures(),b=[];if(a[1].length>0)for(var c in a[1])b.push([a[1][c][0],a[1][c][0]]);else b.push(["",""]);return b},renameProcedure:function(a){var b=this.getProcedures();for(var c in b)if(Blockly.Names.equals(a,b[c][0])){var d=new Blockly.FieldDropdown(this.getProcedures());this.removeInput("DUMMY"),this.appendDummyInput("DUMMY").appendField(d,"PROCEDURES")}this.addVariables()},onchange:function(){this.workspace&&(this.getFieldValue("PROCEDURES")!==this.last_procedure&&(this.addVariables(),this.last_procedure=this.getFieldValue("PROCEDURES")),this.getVariables(this.getFieldValue("PROCEDURES"))!==this.last_variables&&(this.addVariables(),this.last_variables=this.getVariables(this.getFieldValue("PROCEDURES"))))},addVariables:function(){for(var a=this.getVariables(this.getFieldValue("PROCEDURES")),b=0;b<this.maxVariableNumber()&&null!==this.getInput("VARIABLES"+b);b++)this.removeInput("VARIABLES"+b);for(var c in a)this.appendValueInput("VARIABLES"+c).appendField(a[c])},maxVariableNumber:function(){var a=Blockly.Procedures.allProcedures(),b=[],c=0;if(a[1].length>0){for(var d in a[1])a[1][d][1].length>c&&(c=a[1][d][1].length);return c}b.push(["",""])},getVariables:function(a){var b=Blockly.Procedures.allProcedures(),c=[];if(b[1].length>0){for(var d in b[1])if(b[1][d][0]===a)return b[1][d][1]}else c.push(["",""])}},Blockly.Arduino.procedures_defnoreturn=function(){var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),b=Blockly.Arduino.statementToCode(this,"STACK");Blockly.Arduino.INFINITE_LOOP_TRAP&&(b=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);var c=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"";c&&(c="  return "+c+";\n");var d=c?"int":"void",e=this.paramString,f=JST.procedures_defnoreturn({returnType:d,funcName:a,args:e,branch:b,returnValue:c});return f=Blockly.Arduino.scrub_(this,f),Blockly.Arduino.definitions_[a]=f,null},Blockly.Blocks.procedures_defnoreturn={category:RoboBlocks.LANG_CATEGORY_PROCEDURES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/procedures_defnoreturn",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var a=Blockly.Procedures.findLegalName(RoboBlocks.LANG_PROCEDURES_DEFNORETURN_PROCEDURE,this);this.appendDummyInput().appendField(new Blockly.FieldTextInput(a,Blockly.Procedures.rename),"NAME").appendField("","PARAMS"),this.appendStatementInput("STACK").appendField(RoboBlocks.LANG_PROCEDURES_DEFNORETURN_DO),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),this.setTooltip(RoboBlocks.LANG_PROCEDURES_DEFNORETURN_TOOLTIP),this.arguments_=[]},updateParams_:function(){for(var a=!1,b={},c=0;c<this.arguments_.length;c++){if(b["arg_"+this.arguments_[c].toLowerCase()]){a=!0;break}b["arg_"+this.arguments_[c].toLowerCase()]=!0}if(a)try{this.setWarningText(RoboBlocks.LANG_PROCEDURES_DEF_DUPLICATE_WARNING)}catch(d){console.log("Captured error: ",d)}else this.setWarningText(null);var e=[];for(var f in this.arguments_)e.push(this.type_arguments_[f]+" "+this.arguments_[f]);this.paramString=e.join(", "),this.setFieldValue(this.paramString,"PARAMS")},decompose:function(a){var b=Blockly.Block.obtain(a,"procedures_mutatorcontainer");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.arguments_.length;d++){var e=Blockly.Block.obtain(a,"procedures_mutatorarg");e.initSvg(),e.setFieldValue(this.type_arguments_[d],"TYPE"),e.setFieldValue(this.arguments_[d],"NAME"),e.oldLocation=d,c.connect(e.previousConnection),c=e.nextConnection}return Blockly.Procedures.mutateCallers(this.getFieldValue("NAME"),this.workspace,this.arguments_,null),b},compose:function(a){this.arguments_=[],this.paramIds_=[],this.type_arguments_=[];for(var b,c=a.getInputTargetBlock("STACK");c;)b=c.getFieldValue("NAME"),this.type_arguments_.push(c.getFieldValue("TYPE")),this.arguments_.push(b),this.paramIds_.push(c.id),c=c.nextConnection&&c.nextConnection.targetBlock();this.updateParams_(),Blockly.Procedures.mutateCallers(this.getFieldValue("NAME"),this.workspace,this.arguments_,this.paramIds_)},dispose:function(){var a=this.getFieldValue("NAME"),b=this.editable,c=this.workspace;Blockly.Block.prototype.dispose.apply(this,arguments),b&&Blockly.Procedures.disposeCallers(a,c)},getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!1]},getVars:function(){return this.arguments_},renameVar:function(a,b){for(var c=!1,d=0;d<this.arguments_.length;d++)Blockly.Names.equals(a,this.arguments_[d])&&(this.arguments_[d]=b,c=!0);if(c&&(this.updateParams_(),this.mutator.isVisible_())){var e,f=this.mutator.workspace_.getAllBlocks();for(d=0;f.length;d++)e=f[d],"procedures_mutatorarg"===e.type&&Blockly.Names.equals(a,e.getFieldValue("NAME"))&&e.setFieldValue(b,"NAME")}}},Blockly.Blocks.procedures_mutatorcontainer={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput().appendField(RoboBlocks.LANG_PROCEDURES_MUTATORCONTAINER_Field),this.appendStatementInput("STACK"),this.setTooltip(""),this.contextMenu=!1}},Blockly.Blocks.procedures_mutatorarg={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendDummyInput().appendField(RoboBlocks.LANG_PROCEDURES_MUTATORARG_Field).appendField(new Blockly.FieldDropdown([["int","int"],["String","String"]]),"TYPE").appendField(new Blockly.FieldTextInput("x",Blockly.Blocks.procedures_mutatorarg.validator),"NAME"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(""),this.contextMenu=!1
}},Blockly.Blocks.procedures_mutatorarg.validator=function(a){return a=a.replace(/[\s\xa0]+/g," ").replace(/^ | $/g,""),a||null},Blockly.Arduino.procedures_defreturn=function(){var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),b=Blockly.Arduino.statementToCode(this,"STACK");Blockly.Arduino.INFINITE_LOOP_TRAP&&(b=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);var c=Blockly.Arduino.valueToCode(this,"RETURN",Blockly.Arduino.ORDER_NONE)||"";c&&(c="  return "+c+";\n");var d=c?"int":"void",e=this.paramString,f=JST.procedures_defreturn({returnType:d,funcName:a,args:e,branch:b,returnValue:c});return f=Blockly.Arduino.scrub_(this,f),Blockly.Arduino.definitions_[a]=f,null},Blockly.Blocks.procedures_defreturn={category:RoboBlocks.LANG_CATEGORY_PROCEDURES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/procedures_defreturn",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES);var a=Blockly.Procedures.findLegalName(RoboBlocks.LANG_PROCEDURES_DEFRETURN_PROCEDURE,this);this.appendDummyInput().appendField(new Blockly.FieldTextInput(a,Blockly.Procedures.rename),"NAME").appendField("","PARAMS"),this.appendStatementInput("STACK").appendField(RoboBlocks.LANG_PROCEDURES_DEFRETURN_DO),this.appendValueInput("RETURN").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_PROCEDURES_DEFRETURN_RETURN),this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"])),this.setTooltip(RoboBlocks.LANG_PROCEDURES_DEFRETURN_TOOLTIP),this.arguments_=[]},updateParams_:Blockly.Blocks.procedures_defnoreturn.updateParams_,decompose:Blockly.Blocks.procedures_defnoreturn.decompose,compose:Blockly.Blocks.procedures_defnoreturn.compose,dispose:Blockly.Blocks.procedures_defnoreturn.dispose,getProcedureDef:function(){return[this.getFieldValue("NAME"),this.arguments_,!0]},getVars:Blockly.Blocks.procedures_defnoreturn.getVars,renameVar:Blockly.Blocks.procedures_defnoreturn.renameVar},Blockly.Arduino.procedures_ifreturn=function(){var a=Blockly.Arduino.valueToCode(this,"CONDITION",Blockly.Arduino.ORDER_NONE)||"",b="if ("+a+") {\n";if(this.hasReturnValue_){var c=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_NONE)||"";b+="  return "+c+";\n"}else b+="  return;\n";return b+="}\n"},Blockly.Blocks.procedures_ifreturn={category:RoboBlocks.LANG_CATEGORY_PROCEDURES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/procedures_ifreturn",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_PROCEDURES),this.appendValueInput("CONDITION").setCheck(Boolean).appendField(RoboBlocks.LANG_CONTROLS_IF_MSG_IF),this.appendDummyInput().appendField(RoboBlocks.LANG_PROCEDURES_DEFRETURN_RETURN),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_PROCEDURES_IFRETURN_TOOLTIP),this.hasReturnValue_=!0},mutationToDom:function(){var a=document.createElement("mutation");return a.setAttribute("value",Number(this.hasReturnValue_)),a},domToMutation:function(a){var b=a.getAttribute("value");this.hasReturnValue_=1===b,this.hasReturnValue_||this.removeInput("VALUE")},onchange:function(){if(this.workspace){var a=!1,b=this;do{if("procedures_defnoreturn"===b.type||"procedures_defreturn"===b.type){a=!0;break}b=b.getSurroundParent()}while(b);if(a)"procedures_defnoreturn"===b.type&&this.hasReturnValue_?(this.removeInput("VALUE"),this.hasReturnValue_=!1):"procedures_defreturn"!==b.type||this.hasReturnValue_||(this.appendValueInput("VALUE"),this.hasReturnValue_=!0),this.setWarningText(null);else try{this.setWarningText(RoboBlocks.LANG_PROCEDURES_IFRETURN_WARNING)}catch(c){console.log("Captured error: ",c)}}}},Blockly.Arduino.serial_available=function(){var a=Blockly.Arduino.statementToCode(this,"DO"),b=JST.serial_available({branch:a});return b},Blockly.Blocks.serial_available={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/serial_available",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput().appendField(RoboBlocks.LANG_ADVANCED_SERIAL_AVAILABLE),this.appendStatementInput("DO").appendField(RoboBlocks.LANG_CONTROLS_REPEAT_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP)}},Blockly.Arduino.serial_print=function(){var a=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_serial_print=JST.serial_print_setups({bitrate:profiles.default.serial});var b=JST.serial_print({content:a});return b},Blockly.Blocks.serial_print={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/serial_print",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.LANG_ADVANCED_SERIAL_PRINT),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ADVANCED_SERIAL_PRINT_TOOLTIP)}},Blockly.Arduino.serial_println=function(){var a=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_serial_println=JST.serial_println_setups({bitrate:profiles.default.serial});var b=JST.serial_println({content:a});return b},Blockly.Blocks.serial_println={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/serial_println",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendValueInput("CONTENT",String).appendField(RoboBlocks.LANG_ADVANCED_SERIAL_PRINTLN),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP)}},Blockly.Arduino.serial_read=function(){Blockly.Arduino.setups_.setup_serial_read=JST.serial_read_setups({bitrate:profiles.default.serial});var a=JST.serial_read({});return[a,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_read={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/serial_read",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_SERIAL_READ),this.setOutput(!0,String),this.setTooltip(RoboBlocks.LANG_ADVANCED_SERIAL_READ_TOOLTIP)}},Blockly.Arduino.serial_special=function(){var a=this.getFieldValue("CHAR"),b=JST.serial_special({"char":a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_special={category:RoboBlocks.LANG_CATEGORY_ADVANCED,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/serial_special",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_TAB,"\\t"],[RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN,"\\r"],[RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED,"\\n"]]),"CHAR"),this.setOutput(!0,String),this.setTooltip(RoboBlocks.LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP)}},Blockly.Arduino.servo_cont=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=this.getFieldValue("ROT")||"",c=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC)||"";c=c.replace("(","").replace(")",""),Blockly.Arduino.definitions_.define_servo=JST.servo_cont_definitions({dropdown_pin:a}),Blockly.Arduino.setups_["setup_servo_"+a]=JST.servo_cont_setups({dropdown_pin:a});var d=JST.servo_cont({dropdown_pin:a,value_degree:b,delay_time:c});return d},Blockly.Blocks.servo_cont={category:RoboBlocks.LANG_CATEGORY_SERVO,tags:["servo continuous"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/servo_cont",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SERVO),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_SERVO_CONT).appendField(new Blockly.FieldImage("img/blocks/bqservo03.png",208*options.zoom,126*options.zoom)).appendField(RoboBlocks.LANG_SERVO_CONT_PIN),this.appendDummyInput().appendField(RoboBlocks.LANG_SERVO_CONT_ROT).setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_SERVO_CONT_TURN_CLOCKWISE,"0"],[RoboBlocks.LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE,"180"],[RoboBlocks.LANG_SERVO_CONT_STOPPED,"90"]]),"ROT"),this.appendValueInput("DELAY_TIME",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_SERVO_CONT_DELAY),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_SERVO_CONT_TOOLTIP)}},Blockly.Arduino.servo_move=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC),b=Blockly.Arduino.valueToCode(this,"DEGREE",Blockly.Arduino.ORDER_ATOMIC);b=b.replace("(","").replace(")","");var c=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC);c=c.replace("(","").replace(")",""),Blockly.Arduino.definitions_.define_servo=JST.servo_move_definitions({dropdown_pin:a}),Blockly.Arduino.setups_["setup_servo_"+a]=JST.servo_move_setups({dropdown_pin:a});var d=JST.servo_move({dropdown_pin:a,value_degree:b,delay_time:c});return d},Blockly.Blocks.servo_move={category:RoboBlocks.LANG_CATEGORY_SERVO,tags:["servo move"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/servo_move",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_SERVO),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_SERVO_MOVE).appendField(new Blockly.FieldImage("img/blocks/bqservo01.png",208*options.zoom,126*options.zoom)).appendField(RoboBlocks.LANG_SERVO_MOVE_PIN),this.appendValueInput("DEGREE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_SERVO_MOVE_DEGREES),this.appendValueInput("DELAY_TIME",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_SERVO_MOVE_DELAY),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_SERVO_MOVE_TOOLTIP)}},Blockly.Arduino.text=function(){var a=Blockly.Arduino.quote_(this.getFieldValue("TEXT"));return[a,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.text={category:RoboBlocks.LANG_CATEGORY_TEXT,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/text",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField('"').appendField(new Blockly.FieldTextInput(""),"TEXT").appendField('"'),this.setOutput(!0,String),this.setTooltip(RoboBlocks.LANG_TEXT_TEXT_TOOLTIP)}},Blockly.Arduino.text_append=function(){var a=Blockly.Arduino.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),b=Blockly.Arduino.valueToCode(this,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";return a+" += String("+b+");\n"},Blockly.Blocks.text_append={category:RoboBlocks.LANG_CATEGORY_TEXT,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/text_append",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("TEXT").appendField(RoboBlocks.LANG_TEXT_APPEND_TO).appendField(new Blockly.FieldVariable(RoboBlocks.LANG_TEXT_APPEND_VARIABLE),"VAR").appendField(RoboBlocks.LANG_TEXT_APPEND_APPENDTEXT),this.setPreviousStatement(!0),this.setNextStatement(!0);var a=this;this.setTooltip(function(){return RoboBlocks.LANG_TEXT_APPEND_TOOLTIP.replace("%1",a.getFieldValue("VAR"))})},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setTitleValue(b,"VAR")}},Blockly.Arduino.text_equalsIgnoreCase=function(){var a=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"STRING2",Blockly.Arduino.ORDER_NONE),c=JST.text_equalsIgnoreCase({string1:a,string2:b});return[c,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.text_equalsIgnoreCase={category:RoboBlocks.LANG_CATEGORY_TEXT,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/text_equalsIgnoreCase",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_IS),this.appendValueInput("STRING2").appendField(RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_EQUAL).setAlign(Blockly.ALIGN_RIGHT),this.appendDummyInput().appendField(RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_QUESTION),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_TEXT_EQUALSIGNORECASE_TOOLTIP)}},Blockly.Arduino.text_join=function(){var a;if(0===this.itemCount_)return["''",Blockly.Arduino.ORDER_ATOMIC];if(1===this.itemCount_){var b=Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"";return a=b,[a,Blockly.Arduino.ORDER_UNARY_POSTFIX]}a=[],a[0]="String("+(Blockly.Arduino.valueToCode(this,"ADD0",Blockly.Arduino.ORDER_NONE)||"");for(var c=1;c<this.itemCount_;c++)a[c]=") + String("+(Blockly.Arduino.valueToCode(this,"ADD"+c,Blockly.Arduino.ORDER_NONE)||"");return a[this.itemCount_]=")",a=a.join(""),[a,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_join={category:RoboBlocks.LANG_CATEGORY_TEXT,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/text_join",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("ADD0").appendField(RoboBlocks.LANG_TEXT_JOIN_Field_CREATEWITH),this.appendValueInput("ADD1"),this.setOutput(!0,String),this.setMutator(new Blockly.Mutator(["text_create_join_item"])),this.setTooltip(RoboBlocks.LANG_TEXT_JOIN_TOOLTIP),this.itemCount_=2},mutationToDom:function(){var a=document.createElement("mutation");return a.setAttribute("items",this.itemCount_),a},domToMutation:function(a){for(var b=0;b<this.itemCount_;b++)this.removeInput("ADD"+b);for(this.itemCount_=window.parseInt(a.getAttribute("items"),10),b=0;b<this.itemCount_;b++){var c=this.appendValueInput("ADD"+b);0===b&&c.appendField(RoboBlocks.LANG_TEXT_JOIN_Field_CREATEWITH)}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},decompose:function(a){var b=Blockly.Block.obtain(a,"text_create_join_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.itemCount_;d++){var e=Blockly.Block.obtain(a,"text_create_join_item");e.initSvg(),c.connect(e.previousConnection),c=e.nextConnection}return b},compose:function(a){if(0===this.itemCount_)this.removeInput("EMPTY");else for(var b=this.itemCount_-1;b>=0;b--)this.removeInput("ADD"+b);this.itemCount_=0;for(var c=a.getInputTargetBlock("STACK");c;){var d=this.appendValueInput("ADD"+this.itemCount_);0===this.itemCount_&&d.appendField(RoboBlocks.LANG_TEXT_JOIN_Field_CREATEWITH),c.valueConnection_&&d.connection.connect(c.valueConnection_),this.itemCount_++,c=c.nextConnection&&c.nextConnection.targetBlock()}0===this.itemCount_&&this.appendDummyInput("EMPTY").appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendField(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},saveConnections:function(a){for(var b=a.getInputTargetBlock("STACK"),c=0;b;){var d=this.getInput("ADD"+c);b.valueConnection_=d&&d.connection.targetConnection,c++,b=b.nextConnection&&b.nextConnection.targetBlock()}}},Blockly.Blocks.text_create_join_container={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.LANG_TEXT_CREATE_JOIN_Field_JOIN),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.LANG_TEXT_CREATE_JOIN_TOOLTIP),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={init:function(){this.appendDummyInput().appendField(RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP),this.contextMenu=!1}},Blockly.Blocks.text_create_join_container={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.LANG_TEXT_CREATE_JOIN_TITLE_JOIN),this.appendStatementInput("STACK"),this.setTooltip(RoboBlocks.LANG_TEXT_CREATE_JOIN_TOOLTIP),this.contextMenu=!1}},Blockly.Blocks.text_create_join_item={init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendDummyInput().appendField(RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP),this.contextMenu=!1}},Blockly.Arduino.text_length=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"",b=JST.text_length({argument0:a});return[b,Blockly.Arduino.ORDER_UNARY_POSTFIX]},Blockly.Blocks.text_length={category:RoboBlocks.LANG_CATEGORY_TEXT,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/text_length",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("VALUE").setCheck([String,Array]).appendField(RoboBlocks.LANG_TEXT_LENGTH_INPUT_LENGTH),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_TEXT_LENGTH_TOOLTIP)}},Blockly.Arduino.text_substring=function(){var a=Blockly.Arduino.valueToCode(this,"STRING1",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"FROM",Blockly.Arduino.ORDER_NONE),c=Blockly.Arduino.valueToCode(this,"TO",Blockly.Arduino.ORDER_NONE),d=JST.text_substring({string1:a,from:b,to:c});return d},Blockly.Blocks.text_substring={category:RoboBlocks.LANG_CATEGORY_TEXT,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/text_substring",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_TEXT),this.appendValueInput("STRING1").appendField(RoboBlocks.LANG_TEXT_SUBSTRING),this.appendValueInput("FROM").appendField(RoboBlocks.LANG_TEXT_SUBSTRING_FROM).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.appendValueInput("TO").appendField(RoboBlocks.LANG_TEXT_SUBSTRING_TO).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_TEXT_SUBSTRING_TOOLTIP)}},Blockly.Arduino.variables_get=function(){var a=this.getFieldValue("VAR")||"";return[a,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.variables_get={category:RoboBlocks.LANG_CATEGORY_VARIABLES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/variables_get",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("DUMMY").appendField(RoboBlocks.LANG_VARIABLES_GET).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_VARIABLES_GET_TOOLTIP)},getVariables:function(){var a=Blockly.Variables.allVariables(),b=[];if(a.length>0)for(var c in a)b.push([a[c],a[c]]);else b.push(["",""]);return b},onchange:function(){this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var a=Blockly.Variables.allVariables();for(var b in a)if(Blockly.Variables.allVariables()[b]!==this.last_variables[b]){try{this.removeInput("DUMMY")}catch(c){}this.appendDummyInput("DUMMY").appendField(RoboBlocks.LANG_VARIABLES_GET).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.last_variables=Blockly.Variables.allVariables()}},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setTitleValue(b,"VAR")}},Blockly.Arduino.variables_global=function(){var a,b=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT);console.log("aaaaaaaaaaaaaaaa",b,b.search("ead")),a=isNumber(b)?"int":"String";var c=this.getFieldValue("VAR")||"";return Blockly.Arduino.definitions_["declare_var"+c]=a+" "+c+";",Blockly.Arduino.setups_["define_var"+c]=c+"="+b+";",""},Blockly.Blocks.variables_global={category:RoboBlocks.LANG_CATEGORY_VARIABLES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/variables_global",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput().appendField(RoboBlocks.LANG_VARIABLES_GLOBAL).appendField(new Blockly.FieldTextInput(""),"VAR"),this.appendValueInput("VALUE").appendField(RoboBlocks.LANG_VARIABLES_GLOBAL_EQUALS),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_VARIABLES_GLOBAL_TOOLTIP)},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setFieldValue(b,"VAR")}},Blockly.Arduino.variables_local=function(){var a,b=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT);a=isNumber(b)?"int":"String";var c=this.getFieldValue("VAR")||"",d=a+" "+c+";\n"+c+"="+b+";\n";return d},Blockly.Blocks.variables_local={category:RoboBlocks.LANG_CATEGORY_VARIABLES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/variable",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput().appendField(RoboBlocks.LANG_VARIABLES_LOCAL).appendField(new Blockly.FieldTextInput(""),"VAR"),this.appendValueInput("VALUE").appendField(RoboBlocks.LANG_VARIABLES_LOCAL_EQUALS),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_VARIABLES_LOCAL_TOOLTIP)},getVars:function(){return[this.getFieldValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setFieldValue(b,"VAR")}},Blockly.Arduino.variables_set=function(){var a=Blockly.Arduino.valueToCode(this,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"",b=this.getFieldValue("VAR")||"",c=JST.variables_set({varName:b,varValue:a});return c},Blockly.Blocks.variables_set={category:RoboBlocks.LANG_CATEGORY_VARIABLES,helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/variables_set",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_VARIABLES),this.appendDummyInput("DUMMY").appendField(RoboBlocks.LANG_VARIABLES_SET).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.appendValueInput("VALUE").appendField(RoboBlocks.LANG_VARIABLES_SET_AS).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(RoboBlocks.LANG_VARIABLES_SET_TOOLTIP)},getVariables:function(){var a=Blockly.Variables.allVariables(),b=[];if(a.length>0)for(var c in a)b.push([a[c],a[c]]);else b.push(["",""]);return b},onchange:function(){this.last_variables||(this.last_variables=Blockly.Variables.allVariables());var a=Blockly.Variables.allVariables();for(var b in a)if(Blockly.Variables.allVariables()[b]!==this.last_variables[b]){try{this.removeInput("DUMMY"),this.removeInput("VALUE"),this.appendDummyInput("DUMMY").appendField(RoboBlocks.LANG_VARIABLES_SET).appendField(new Blockly.FieldDropdown(this.getVariables()),"VAR"),this.appendValueInput("VALUE").appendField(RoboBlocks.LANG_VARIABLES_SET_AS).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0)}catch(c){}this.last_variables=Blockly.Variables.allVariables()}},renameVar:function(a,b){Blockly.Names.equals(a,this.getFieldValue("VAR"))&&this.setTitleValue(b,"VAR")}},Blockly.Arduino.zum_button=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_["setup_button_"+a]=JST.zum_button_setups({dropdown_pin:a});var b=JST.zum_button({dropdown_pin:a});return b="digitalRead("+a+")",[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_button={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","button"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_button",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_BUTTON).appendField(new Blockly.FieldImage("img/blocks/zum02.png",212*options.zoom,139*options.zoom)).appendField(RoboBlocks.LANG_ZUM_BUTTON_PIN),this.setOutput(!0,Boolean),this.setTooltip(RoboBlocks.LANG_ZUM_BUTTON_TOOLTIP)}},Blockly.Arduino.zum_follower=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=Blockly.Arduino.valueToCode(this,"PIN2",Blockly.Arduino.ORDER_ATOMIC)||"",c=Blockly.Arduino.statementToCode(this,"SENS1"),d=Blockly.Arduino.statementToCode(this,"SENS2");Blockly.Arduino.setups_["setup_follower_"+a]=JST.zum_follower_setups({dropdown_pin:a,NextPIN:b});var e=JST.zum_follower({dropdown_pin:a,NextPIN:b,code_btn1:c,code_btn2:d});return[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_follower={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","follower"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_follower",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField(RoboBlocks.LANG_ZUM_FOLLOWER).appendField(new Blockly.FieldImage("img/blocks/zum06.png",203*options.zoom,165*options.zoom)),this.appendValueInput("PIN").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_FOLLOWER_PIN_LEFT),this.appendValueInput("PIN2").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_FOLLOWER_PIN_RIGHT),this.appendStatementInput("SENS1").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_FOLLOWER_LEFT),this.appendStatementInput("SENS2").setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_FOLLOWER_RIGHT),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ZUM_FOLLOWER_TOOLTIP)}},Blockly.Arduino.zum_infrared=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"";Blockly.Arduino.setups_["setup_infrared_"+a]=JST.zum_infrared_setups({dropdown_pin:a});var b=JST.zum_infrared({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_infrared={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","infrared"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_infrared",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_INFRARED).appendField(new Blockly.FieldImage("img/blocks/zum07.png",208*options.zoom,126*options.zoom)).appendField(RoboBlocks.LANG_ZUM_INFRARED_PIN),this.setOutput(!0),this.setTooltip(RoboBlocks.LANG_ZUM_INFRARED_TOOLTIP)}},Blockly.Arduino.zum_led=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_green_led_"+a]=JST.zum_led_setups({dropdown_pin:a,dropdown_stat:b});var c=JST.zum_led({dropdown_pin:a,dropdown_stat:b});return c},Blockly.Blocks.zum_led={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","led"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_led",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_LED).appendField(new Blockly.FieldImage("img/blocks/zum04.png",208*options.zoom,140*options.zoom)).appendField(RoboBlocks.LANG_ZUM_LED_PIN),this.appendDummyInput().appendField("state").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ZUM_LED_ON,"HIGH"],[RoboBlocks.LANG_ZUM_LED_OFF,"LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ZUM_LED_TOOLTIP)}},Blockly.Arduino.zum_photoresistor=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=JST.zum_photoresistor({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_photoresistor={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","photoresistor"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_photoresistor",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_PHOTORESISTOR).appendField(new Blockly.FieldImage("img/blocks/zum05.png",208*options.zoom,126*options.zoom)).appendField(RoboBlocks.LANG_ZUM_PHOTORESISTOR_PIN),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_ZUM_PHOTORESISTOR_TOOLTIP)}},Blockly.Arduino.zum_piezo_buzzer=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=this.getFieldValue("STAT"),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.zum_piezo_buzzer({dropdown_pin:a,dropdown_stat:b,delay_time:c});return d="tone("+a+","+b+","+c+");\ndelay("+c+");\n"},Blockly.Blocks.zum_piezo_buzzer={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","buzzer"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_piezo_buzzer",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZER).appendField(new Blockly.FieldImage("img/blocks/zum01.png",208*options.zoom,140*options.zoom)).appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZER_PIN),this.appendDummyInput().appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZER_TONE).setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown([[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_DO,"261"],[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_RE,"293"],[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_MI,"329"],[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_FA,"349"],[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_SOL,"392"],[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_LA,"440"],[RoboBlocks.LANG_ZUM_PIEZO_BUZZER_SI,"494"]]),"STAT"),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZER_DURATION),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP)}},Blockly.Arduino.zum_piezo_buzzerav=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=Blockly.Arduino.valueToCode(this,"TONE",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.zum_piezo_buzzerav({dropdown_pin:a,Buzztone:b,delay_time:c});return d},Blockly.Blocks.zum_piezo_buzzerav={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","advanced buzzer"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_piezo_buzzerav",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV).appendField(new Blockly.FieldImage("img/blocks/zum01.png",208*options.zoom,140*options.zoom)).appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_PIN),this.appendValueInput("TONE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_TONE),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField(RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_DURATION),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip(RoboBlocks.LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP)}},Blockly.Arduino.zum_potentiometer=function(){var a=Blockly.Arduino.valueToCode(this,"PIN",Blockly.Arduino.ORDER_ATOMIC)||"",b=JST.zum_potentiometer({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_potentiometer={category:RoboBlocks.LANG_CATEGORY_ZUM,tags:["bq","zum","potentiometer"],helpUrl:RoboBlocks.GITHUB_SRC_URL+"blocks/zum_potentiometer",init:function(){this.setColour(RoboBlocks.LANG_COLOUR_ZUM),this.appendValueInput("PIN").appendField(RoboBlocks.LANG_ZUM_POTENTIOMETER).appendField(new Blockly.FieldImage("img/blocks/zum03.png",208*options.zoom,139*options.zoom)).appendField(RoboBlocks.LANG_ZUM_POTENTIOMETER_PIN),this.setOutput(!0,Number),this.setTooltip(RoboBlocks.LANG_ZUM_POTENTIOMETER_TOOLTIP)}}},RoboBlocks={load:load};return"function"==typeof define&&define.amd?RoboBlocks:void(window.RoboBlocks=RoboBlocks)});