/*! roboblocks - v0.0.6 - 2014-10-08
* http://github.com/bq/roboblock
* Copyright (c) 2014 bq; Licensed  */
!function(a){"function"==typeof define&&define.amd?define(["underscore","blockly","blockly.blocks","blockly.lang"],a):a(_,window.Blockly,window.Blocks,window.BlocklyLang)}(function(_,Blockly,Blocks,BlocklyLang){var load=function(options){Blockly.createToolbox=function(){var a={};for(var b in this.Blocks)if(this.Blocks.hasOwnProperty(b)&&this.Blocks[b]instanceof Object&&this.Blocks[b].category){var c=this.Blocks[b].category;a[c]=a[c]||[],a[c].push(b)}var d='<xml id="toolbox" style="display: none">',e=function(a){d+='<block type="'+a+'"></block>'};for(b in a)a.hasOwnProperty(b)&&(d+='<category name="'+b+'">',a[b].forEach(e),d+="</category>");return d+="</xml>"},RoboBlocks.GITHUB_SRC_URL="https://github.com/bq/roboblocks/tree/master/src/";var profiles={arduino:{description:"Standard-compatible board",digital:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],bluetooth:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"]],pwm:[["#3","3"],["#5","5"],["#6","6"],["#9","9"],["#10","10"],["#11","11"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],serial:9600},arduino_mega:{description:"Mega-compatible board"}};profiles["default"]=profiles.arduino,this.JST=this.JST||{},this.JST.advanced_conversion=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(value_num)+","+__e(convertion);return __p},this.JST.advanced_map=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="map("+__e(num)+","+__e(from_min)+","+__e(from_max)+","+__e(to_min)+","+__e(to_max)+")";return __p},this.JST.base_delay=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="delay("+__e(delay_time)+");\n";return __p},this.JST.bq_bat=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Distance"+__e(red_pin)+"()";return __p},this.JST.bq_bat_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="//bqBAT\nlong Distance"+__e(red_pin)+"()\n{\n  long microseconds = TP_init"+__e(red_pin)+"();\n  long distance;\n  distance = microseconds/29/2;\n  return distance;\n}\n\nlong TP_init"+__e(red_pin)+"()\n{\n  digitalWrite( "+__e(blue_pin)+" , LOW);\n  delayMicroseconds(2);\n  digitalWrite( "+__e(blue_pin)+" , HIGH);\n  delayMicroseconds(10);\n  digitalWrite( "+__e(blue_pin)+" , LOW);\n  long microseconds = pulseIn( "+__e(red_pin)+" ,HIGH);\n  return microseconds;\n}\n";return __p},this.JST.bq_bat_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(red_pin)+" , INPUT );\n  pinMode( "+__e(blue_pin)+" , OUTPUT );";return __p},this.JST.bq_bluetooth_slave=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="char recvChar_"+__e(dropdown_pin)+";\n while(1) {\n  if(blueToothSerial_"+__e(dropdown_pin)+".available()) { //Check if there is any data sent from the remote bluetooth\n    recvChar_"+__e(dropdown_pin)+" = blueToothSerial_"+__e(dropdown_pin)+".read();\n    Serial.print(recvChar_"+__e(dropdown_pin)+");\n}\n  if(Serial.available()){ //Check if there is any data sent from the local serial terminal\n    recvChar_"+__e(dropdown_pin)+" = Serial.read();\n    blueToothSerial_"+__e(dropdown_pin)+".print(recvChar_"+__e(dropdown_pin)+");\n	}\n }\n";return __p},this.JST.bq_bluetooth_slave_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <SoftwareSerial.h>\n\nSoftwareSerial blueToothSerial_"+__e(dropdown_pin)+"("+__e(dropdown_pin)+","+__e(NextPIN)+");\n\nvoid setupBlueToothConnection_"+__e(dropdown_pin)+"()\n{\n  blueToothSerial_"+__e(dropdown_pin)+".begin(38400); //Set Bluetooth BaudRate to default baud rate 38400\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STWMOD=0\\\\r\\\\n'); //Set the bluetooth work in slave mode\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STNA="+__e(name)+"\\\\r\\\\n'); //Set the bluetooth name as "+__e(name)+"\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STPIN="+__e(pincode)+"\\\\r\\\\n'); //Set SLAVE pincode\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STOAUT=1\\\\r\\\\n'); //Auto-connection should be forbidden\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+STAUTO=0\\\\r\\\\n');\n  delay(2000); //This delay is required\n  blueToothSerial_"+__e(dropdown_pin)+".print('\\\\r\\\\n+INQ=1\\\\r\\\\n'); //Make the slave bluetooth inquirable\n  Serial.println('The slave bluetooth is inquirable!');\n  delay(2000); //This delay is required\n  blueToothSerial_"+__e(dropdown_pin)+".flush();\n}\n";return __p},this.JST.bq_bluetooth_slave_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin(9600);\n  pinMode("+__e(dropdown_pin)+",OUTPUT);\n  pinMode("+__e(NextPIN)+", OUTPUT);\n  setupBlueToothConnection_"+__e(dropdown_pin)+"();\n\n";return __p},this.JST.bq_button=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")\n";return __p},this.JST.bq_button_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT_PULLUP);\n";return __p},this.JST.bq_buttons=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="  adc_key_in =analogRead(+dropdown_pin+);\n  key = get_key(adc_key_in);\n  if (key != oldkey)\n  {\n    delay(50);\n    adc_key_in = analogRead(+dropdown_pin+);\n    key = get_key(adc_key_in);\n    if (key != oldkey)\n    {\n      oldkey = key;\n      if (key >=0){\n        switch(key)\n        {\n          case 0:\n           code_btn1\n          break;\n          case 1:\n           code_btn2\n          break;\n          case 2:\n           code_btn3\n          break;\n          case 3:\n           code_btn4\n          break;  \n          case 4:\n           code_btn5\n          break;\n        }      \n      }\n    }\n  }\n";return __p},this.JST.bq_buttons_definitions=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="//bqButtons\n  int adc_key_val[5] ={20,50, 100, 200, 600 };\n  int NUM_KEYS = 5;\n  int adc_key_in;\n  int key=-1;\n  int oldkey=-1;\n  int get_key(unsigned int input)\n  {\n    int k;\n    for (k = 0; k < NUM_KEYS; k++)\n    {\n      if (input < adc_key_val[k])\n      {\n        return k;\n      }\n    }\n    if (k >= NUM_KEYS)k = -1;\n      return k;\n  }\n";return __p},this.JST.bq_infrared=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.bq_infrared_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(dropdown_pin)+" , INPUT);";return __p},this.JST.bq_joystick=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")\n";return __p},this.JST.bq_led=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite("+__e(dropdown_pin)+","+__e(dropdown_stat)+");\n";return __p},this.JST.bq_led_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.bq_photoresistor=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.bq_piezo_buzzer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(dropdown_stat)+","+__e(delay_time)+");\n\n";return __p},this.JST.bq_piezo_buzzerav=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(Buzztone)+","+__e(delay_time)+");\ndelay("+__e(delay_time)+");\n\n";return __p},this.JST.bq_potentiometer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.inout_analog_read=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.inout_analog_read_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT);\n";return __p},this.JST.inout_analog_write=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogWrite("+__e(dropdown_pin)+","+__e(value_num)+");\n";return __p},this.JST.inout_analog_write_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.inout_builtin_led=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite(13,"+__e(dropdown_stat)+");\n";return __p},this.JST.inout_builtin_led_setups=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="pinMode(13,OUTPUT);\n";return __p},this.JST.inout_digital_read=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.inout_digital_read_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT);\n";return __p},this.JST.inout_digital_write=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite("+__e(dropdown_pin)+","+__e(dropdown_stat)+");\n";return __p},this.JST.inout_digital_write_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.inout_highlow=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(bool_value);return __p},this.JST.math_random=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="random("+__e(value_num)+", "+__e(value_dmax)+")";return __p},this.JST.serial_available=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="if (Serial.available()>0){"+__e(branch)+"\n}\n";return __p},this.JST.serial_print=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.print("+__e(content)+");";return __p},this.JST.serial_print_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin("+__e(bitrate)+");\n";return __p},this.JST.serial_println=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.println("+__e(content)+");";return __p},this.JST.serial_println_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin("+__e(bitrate)+");\n";return __p},this.JST.serial_read=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="Serial.read()";return __p},this.JST.serial_read_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="Serial.begin("+__e(bitrate)+");\n";return __p},this.JST.serial_special=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+=__e(char);return __p},this.JST.servo_cont=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".write("+__e(value_degree)+");\ndelay("+__e(delay_time)+");\n";return __p},this.JST.servo_cont_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servo_"+__e(dropdown_pin)+";\n";return __p},this.JST.servo_cont_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".attach("+__e(dropdown_pin)+");";return __p},this.JST.servo_move=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".write("+__e(value_degree)+");\ndelay("+__e(delay_time)+");\n";return __p},this.JST.servo_move_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servo_"+__e(dropdown_pin)+";\n";return __p},this.JST.servo_move_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".attach("+__e(dropdown_pin)+");";return __p},this.JST.servo_read_degrees=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="  servo_"+__e(dropdown_pin)+".read()";return __p},this.JST.servo_read_degrees_definitions=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="#include <Servo.h>\n\nServo servo_"+__e(dropdown_pin)+";\n";return __p},this.JST.servo_read_degrees_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="servo_"+__e(dropdown_pin)+".attach("+__e(dropdown_pin)+");";return __p},this.JST.zum_button=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")\n";return __p},this.JST.zum_button_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",INPUT_PULLUP);\n";return __p},this.JST.zum_follower=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="if(digitalRead("+__e(dropdown_pin)+")==HIGH)\n{\n  code_btn1\n}\nif(digitalRead("+__e(NextPIN)+")==HIGH)\n{\n  code_btn2\n}\n";return __p},this.JST.zum_follower_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(dropdown_pin)+" , INPUT);\n  pinMode( "+__e(NextPIN)+" , INPUT);\n";return __p},this.JST.zum_infrared=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalRead("+__e(dropdown_pin)+")";return __p},this.JST.zum_infrared_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode( "+__e(dropdown_pin)+" , INPUT);";return __p},this.JST.zum_led=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="digitalWrite("+__e(dropdown_pin)+","+__e(dropdown_stat)+");\n";return __p},this.JST.zum_led_setups=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="pinMode("+__e(dropdown_pin)+",OUTPUT);\n";return __p},this.JST.zum_photoresistor=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p},this.JST.zum_piezo_buzzer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(dropdown_stat)+","+__e(delay_time)+");\n\n";return __p},this.JST.zum_piezo_buzzerav=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="tone("+__e(dropdown_pin)+","+__e(Buzztone)+","+__e(delay_time)+");\ndelay("+__e(delay_time)+");\n\n";return __p},this.JST.zum_potentiometer=function(obj){obj||(obj={});var __p="",__e=_.escape;with(obj)__p+="analogRead("+__e(dropdown_pin)+")";return __p};var JST=this.JST;Blockly.Arduino.advanced_conversion=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=this.getFieldValue("CONV"),c=JST.advanced_conversion({value_num:a,convertion:b});return[c,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_conversion={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/serial_println",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("Convert").appendField(new Blockly.FieldDropdown([["Decimal","DEC"],["Hexadecimal","HEX"],["Octal","OCT"],["Binary","BIN"]]),"CONV"),this.appendValueInput("NUM",Number).appendField("value").setCheck(Number),this.setOutput(!0,Number),this.setTooltip("Base convert a number")}},Blockly.Arduino.advanced_map=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"FROM_MIN",Blockly.Arduino.ORDER_NONE),c=Blockly.Arduino.valueToCode(this,"FROM_MAX",Blockly.Arduino.ORDER_NONE),d=Blockly.Arduino.valueToCode(this,"TO_MIN",Blockly.Arduino.ORDER_NONE),e=Blockly.Arduino.valueToCode(this,"TO_MAX",Blockly.Arduino.ORDER_NONE),f=JST.advanced_map({num:a,from_min:b,from_max:c,to_min:d,to_max:e});return[f,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.advanced_map={category:Blockly.LANG_CATEGORY_MATH,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/advanced_map",init:function(){this.setColour(Blockly.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField("Map ").setCheck(Number),this.appendValueInput("FROM_MIN",Number).appendField("From [").setCheck(Number),this.appendValueInput("FROM_MAX",Number).appendField("-").setCheck(Number),this.appendDummyInput("").appendField("]"),this.appendValueInput("TO_MIN",Number).appendField("to [").setCheck(Number),this.appendValueInput("TO_MAX",Number).appendField("-").setCheck(Number),this.appendDummyInput("").appendField("]"),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip("Re-maps a number from [0-1024] to another.")}},Blockly.Arduino.base_delay=function(){var a=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC),b=JST.base_delay({delay_time:a});return b},Blockly.Blocks.base_delay={category:Blockly.LANG_CATEGORY_CONTROLS,helpUrl:"http://github.com/bq/roboblock/tree/master/lib/blocks/base_delay",init:function(){this.setColour(Blockly.LANG_COLOUR_CONTROL),this.appendValueInput("DELAY_TIME",Number).appendField("Wait (ms)").setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Delay specific time (in ms)")}},Blockly.Arduino.bq_bat=function(){var a=this.getFieldValue("RED PIN"),b=this.getFieldValue("BLUE PIN");Blockly.Arduino.setups_.setup_bq_bat_=JST.bq_bat_setups({red_pin:a,blue_pin:b}),Blockly.Arduino.definitions_["define_bq_bat_"+a]=JST.bq_bat_definitions({red_pin:a,blue_pin:b});var c=JST.bq_bat({red_pin:a});return[c,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_bat={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","bat"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_bat",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("BAT").appendField(new Blockly.FieldImage("img/blocks/bqmod09.png",208*options.zoom,140*options.zoom)),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("RED PIN#").appendField(new Blockly.FieldDropdown(profiles.arduino.bluetooth),"PIN"),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("BLUE PIN#").appendField(new Blockly.FieldDropdown(profiles.arduino.bluetooth),"PIN"),this.setOutput(!0,Number),this.setTooltip("Output the measured distance")}};var _get_next_pin=function(a){var b=a;b=parseInt(b,2)?parseInt(a,2)+1:"A"+(parseInt(b.slice(1,b.length),2)+1);for(var c=profiles.default.digital.length,d=!0,e=0;c>e;e++)profiles.default.digital[e][1]===b&&(d=!1);return b};Blockly.Arduino.bq_bluetooth_slave=function(){var a=this.getFieldValue("PIN"),b=_get_next_pin(a),c=this.getFieldValue("NAME"),d=this.getFieldValue("PINCODE"),e=Blockly.Arduino.statementToCode(this,"RCV"),f=Blockly.Arduino.statementToCode(this,"SNT");Blockly.Arduino.definitions_.define_softwareserial=JST.bq_bluetooth_slave_definitions({dropdown_pin:a,NextPIN:b,name:c,pincode:d}),Blockly.Arduino.setups_.setup_bluetooth_=JST.bq_bluetooth_slave_setups({dropdown_pin:a,NextPIN:b});var g=JST.bq_bluetooth_slave({dropdown_pin:a,NextPIN:b,name:c,pincode:d,statement_send:f,statement_receive:e});return g},Blockly.Blocks.bq_bluetooth_slave={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","bluetooth"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_bluetooth_slave",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Bluetooth").appendField(new Blockly.FieldImage("img/blocks/bqmod03.png",208*options.zoom,100*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.bluetooth),"PIN"),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("Name").appendField(new Blockly.FieldTextInput("zum"),"NAME"),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("PinCode").appendField(new Blockly.FieldTextInput("0000"),"PINCODE"),this.appendStatementInput("RCV").setAlign(Blockly.ALIGN_RIGHT).appendField("Receive"),this.appendStatementInput("SNT").setAlign(Blockly.ALIGN_RIGHT).appendField("Send"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq Bluetooth")}},Blockly.Arduino.bq_button=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_button_"+a]=JST.bq_button_setups({dropdown_pin:a});var b=JST.bq_button({dropdown_pin:a});return b="digitalRead("+a+")",[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_button={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","button"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_button",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Button").appendField(new Blockly.FieldImage("img/blocks/bqmod05.png",212*options.zoom,139*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setOutput(!0,Boolean),this.setTooltip("bq Button")}},Blockly.Arduino.bq_buttons=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.definitions_.define_buttons=JST.bq_buttons_definitions({dropdown_pin:a});var b=JST.bq_buttons({dropdown_pin:a});return b},Blockly.Blocks.bq_buttons={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","buttons"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_buttons",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Buttons").appendField(new Blockly.FieldImage("img/blocks/bqmod10.png",336*options.zoom,176*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.appendStatementInput("BUTN1").setAlign(Blockly.ALIGN_RIGHT).appendField("Button #A"),this.appendStatementInput("BUTN2").setAlign(Blockly.ALIGN_RIGHT).appendField("Button #B"),this.appendStatementInput("BUTN3").setAlign(Blockly.ALIGN_RIGHT).appendField("Button #C"),this.appendStatementInput("BUTN4").setAlign(Blockly.ALIGN_RIGHT).appendField("Button #D"),this.appendStatementInput("BUTN5").setAlign(Blockly.ALIGN_RIGHT).appendField("Button #E"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq Buttons")}},Blockly.Arduino.bq_infrared=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_infrared_"+a]=JST.bq_infrared_setups({dropdown_pin:a});var b=JST.bq_infrared({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_infrared={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","infrared"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_infrared",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Infrared Sensor").appendField(new Blockly.FieldImage("img/blocks/bqmod04.png",208*options.zoom,126*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setOutput(!0),this.setTooltip("bq Infrared Sensor")}},Blockly.Arduino.bq_joystick=function(){var a=this.getFieldValue("PIN"),b=JST.bq_joystick({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_joystick={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","joystick"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_joystick",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Joystick").appendField(new Blockly.FieldImage("img/blocks/bqmod11.png",209*options.zoom,277*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Number),this.setTooltip("bq Joystick")}},Blockly.Arduino.bq_led=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_green_led_"+a]=JST.bq_led_setups({dropdown_pin:a,dropdown_stat:b});var c=JST.bq_led({dropdown_pin:a,dropdown_stat:b});return c},Blockly.Blocks.bq_led={category:Blockly.LANG_CATEGORY_BQ,tag:["bq","led"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_led",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("LED").appendField(new Blockly.FieldImage("img/blocks/bqmod02.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField("state").appendField(new Blockly.FieldDropdown([["ON","HIGH"],["OFF","LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq LED")}},Blockly.Arduino.bq_photoresistor=function(){var a=this.getFieldValue("PIN"),b=JST.bq_photoresistor({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_photoresistor={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","photoresistor"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_photoresistor",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Photoresistor").appendField(new Blockly.FieldImage("img/blocks/bqmod01.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Number),this.setTooltip("Output the value of the photoresistor.")}},Blockly.Arduino.bq_piezo_buzzer=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT"),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.bq_piezo_buzzer({dropdown_pin:a,dropdown_stat:b,delay_time:c});return d="tone("+a+","+b+","+c+");\ndelay("+c+");\n"},Blockly.Blocks.bq_piezo_buzzer={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","buzzer"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_piezo_buzzer",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Buzzer").appendField(new Blockly.FieldImage("img/blocks/bqmod07.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField("TONE").appendField(new Blockly.FieldDropdown([["DO","261"],["RE","293"],["MI","329"],["FA","349"],["SOL","392"],["LA","440"],["SI","494"]]),"STAT"),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Duration"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Piezo Buzzer")}},Blockly.Arduino.bq_piezo_buzzerav=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"TONE",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.bq_piezo_buzzerav({dropdown_pin:a,Buzztone:b,delay_time:c});return d},Blockly.Blocks.bq_piezo_buzzerav={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","advanced buzzer"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_piezo_buzzerav",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Advanced Buzzer").appendField(new Blockly.FieldImage("img/blocks/bqmod08.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.appendValueInput("TONE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("TONE"),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Duration"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Piezo Buzzer Advanced")}},Blockly.Arduino.bq_potentiometer=function(){var a=this.getFieldValue("PIN"),b=JST.bq_potentiometer({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.bq_potentiometer={category:Blockly.LANG_CATEGORY_BQ,tags:["bq","potentiometer"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/bq_potentiometer",init:function(){this.setColour(Blockly.LANG_COLOUR_BQ),this.appendDummyInput("").appendField("Potentiometer").appendField(new Blockly.FieldImage("img/blocks/bqmod06.png",208*options.zoom,139*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Number),this.setTooltip("bq Potentiometer")}},Blockly.Arduino.inout_analog_read=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_green_analog_read"+a]=JST.inout_analog_read_setups({dropdown_pin:a});var b=JST.inout_analog_read({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_analog_read={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/inout_analog_read",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("AnalogRead PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Boolean),this.setTooltip("Reads the value from a specified digital pin")}},Blockly.Arduino.inout_analog_write=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_green_analog_write_13=JST.inout_analog_write_setups({dropdown_pin:a,value_num:b});var c=JST.inout_analog_write({dropdown_pin:a,value_num:b});return c},Blockly.Blocks.inout_analog_write={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/inout_analog_write",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("AnalogWrite PIN#").appendField(new Blockly.FieldDropdown(profiles.default.pwm),"PIN"),this.appendValueInput("NUM",Number).appendField("value").setCheck(Number),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Write analog value between 0 and 255 to a specific Port")}},Blockly.Arduino.inout_builtin_led=function(){var a=this.getFieldValue("STAT");Blockly.Arduino.setups_.setup_green_led_13=JST.inout_builtin_led_setups({});var b=JST.inout_builtin_led({dropdown_stat:a});return b},Blockly.Blocks.inout_builtin_led={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/inout_builtin_led",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("BUILTIN LED").appendField("state").appendField(new Blockly.FieldDropdown([["ON","HIGH"],["OFF","LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq LED")}},Blockly.Arduino.inout_digital_read=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_green_digital_read"+a]=JST.inout_digital_read_setups({dropdown_pin:a});var b=JST.inout_digital_read({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_digital_read={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/inout_digital_read",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("DigitalRead PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setOutput(!0,Boolean),this.setTooltip("Reads the value from a specified digital pin")}},Blockly.Arduino.inout_digital_write=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_.setup_green_digital_write_13=JST.inout_digital_write_setups({dropdown_pin:a,dropdown_stat:b});var c=JST.inout_digital_write({dropdown_pin:a,dropdown_stat:b});return c},Blockly.Blocks.inout_digital_write={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/inout_digital_write",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("DigitalWrite").appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField("state").appendField(new Blockly.FieldDropdown([["HIGH","HIGH"],["LOW","LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq digital_write")}},Blockly.Arduino.inout_highlow=function(){var a=this.getFieldValue("BOOL"),b=JST.inout_highlow({bool_value:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.inout_highlow={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/inout_highlow",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField(new Blockly.FieldDropdown([["HIGH","HIGH"],["LOW","LOW"]]),"BOOL"),this.setOutput(!0,Boolean),this.setTooltip(Blockly.LANG_LOGIC_BOOLEAN_TOOLTIP_1)
}},Blockly.Arduino.math_random=function(){var a=Blockly.Arduino.valueToCode(this,"NUM",Blockly.Arduino.ORDER_NONE),b=Blockly.Arduino.valueToCode(this,"DMAX",Blockly.Arduino.ORDER_ATOMIC),c=JST.math_random({value_num:a,value_dmax:b});return[c,Blockly.Arduino.ORDER_NONE]},Blockly.Blocks.math_random={category:Blockly.LANG_CATEGORY_MATH,helpUrl:"http://github.com/bq/roboblock/tree/master/lib/blocks/math_random",init:function(){this.setColour(Blockly.LANG_COLOUR_MATH),this.appendValueInput("NUM",Number).appendField("Random between").setCheck(Number),this.appendValueInput("DMAX",Number).appendField(" and ").setCheck(Number),this.setInputsInline(!0),this.setOutput(!0),this.setTooltip("Assign a random number")}},Blockly.Arduino.serial_available=function(){var a=Blockly.Arduino.statementToCode(this,"DO"),b=JST.serial_available({branch:a});return b},Blockly.Blocks.serial_available={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/serial_println",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput().appendField("Serial Available"),this.appendStatementInput("DO").appendField(Blockly.LANG_CONTROLS_REPEAT_INPUT_DO),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip(Blockly.LANG_CONTROLS_REPEAT_TOOLTIP)}},Blockly.Arduino.serial_print=function(){var a=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_serial_print=JST.serial_print_setups({bitrate:profiles.default.serial});var b=JST.serial_print({content:a});return b},Blockly.Blocks.serial_print={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/serial_print",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendValueInput("CONTENT",String).appendField("Serial Print"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Prints data to the console/serial port as human-readable ASCII text.")}},Blockly.Arduino.serial_println=function(){var a=Blockly.Arduino.valueToCode(this,"CONTENT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.setups_.setup_serial_println=JST.serial_println_setups({bitrate:profiles.default.serial});var b=JST.serial_println({content:a});return b},Blockly.Blocks.serial_println={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/serial_println",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendValueInput("CONTENT",String).appendField("Serial Println"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Prints data to the console/serial port as human-readable ASCII text and add CR.")}},Blockly.Arduino.serial_read=function(){Blockly.Arduino.setups_.setup_serial_read=JST.serial_read_setups({bitrate:profiles.default.serial});var a=JST.serial_read({});return[a,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_read={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/serial_read",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("Serial Read"),this.setOutput(!0,String),this.setTooltip("Reads incoming serial data from serial port as human-readable ASCII text.")}},Blockly.Arduino.serial_special=function(){var a=this.getFieldValue("CHAR"),b=JST.serial_special({"char":a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.serial_special={category:Blockly.LANG_CATEGORY_ADVANCED,helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/serial_println",init:function(){this.setColour(Blockly.LANG_COLOUR_ADVANCED),this.appendDummyInput("").appendField("Special Chars").appendField(new Blockly.FieldDropdown([["Tab","\\t"],["Carriage Return","\\r"],["Line Feed","\\n"]]),"CHAR"),this.setOutput(!0,String),this.setTooltip("Write special Chars")}},Blockly.Arduino.servo_cont=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("ROT"),c=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC);c=c.replace("(","").replace(")",""),Blockly.Arduino.definitions_.define_servo=JST.servo_cont_definitions({dropdown_pin:a}),Blockly.Arduino.setups_["setup_servo_"+a]=JST.servo_cont_setups({dropdown_pin:a});var d=JST.servo_cont({dropdown_pin:a,value_degree:b,delay_time:c});return d},Blockly.Blocks.servo_cont={category:Blockly.LANG_CATEGORY_SERVO,tags:["servo continuous"],helpUrl:"http://github.com/bq/roboblock/tree/master/lib/blocks/servo_cont",init:function(){this.setColour(Blockly.LANG_COLOUR_SERVO),this.appendDummyInput("").appendField("Servo").appendField(new Blockly.FieldImage("img/blocks/bqservo03.png",208*options.zoom,126*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField("ROT").appendField(new Blockly.FieldDropdown([["TURN CLOCKWISE","0"],["TURN COUNTERCLOCKWISE","180"],["STOPPED","90"]]),"ROT"),this.appendValueInput("DELAY_TIME",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Delay"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Continuous rotation servo")}},Blockly.Arduino.servo_move=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"DEGREE",Blockly.Arduino.ORDER_ATOMIC);b=b.replace("(","").replace(")","");var c=Blockly.Arduino.valueToCode(this,"DELAY_TIME",Blockly.Arduino.ORDER_ATOMIC);c=c.replace("(","").replace(")",""),Blockly.Arduino.definitions_.define_servo=JST.servo_move_definitions({dropdown_pin:a}),Blockly.Arduino.setups_["setup_servo_"+a]=JST.servo_move_setups({dropdown_pin:a});var d=JST.servo_move({dropdown_pin:a,value_degree:b,delay_time:c});return d},Blockly.Blocks.servo_move={category:Blockly.LANG_CATEGORY_SERVO,tags:["servo move"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/servo_move",init:function(){this.setColour(Blockly.LANG_COLOUR_SERVO),this.appendDummyInput("").appendField("Servo").appendField(new Blockly.FieldImage("img/blocks/bqservo01.png",208*options.zoom,126*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.appendValueInput("DEGREE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Degrees (0~180)"),this.appendValueInput("DELAY_TIME",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Delay"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Move between 0~180 degree")}},Blockly.Arduino.servo_read_degrees=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.definitions_.define_servo=JST.servo_read_degrees_definitions({dropdown_pin:a}),Blockly.Arduino.setups_["setup_servo_"+a]=JST.servo_read_degrees_setups({dropdown_pin:a});var b=JST.servo_read_degrees({dropdown_pin:a});return b},Blockly.Blocks.servo_read_degrees={category:Blockly.LANG_CATEGORY_SERVO,tags:["servo read degrees"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/servo_read_degrees",init:function(){this.setColour(Blockly.LANG_COLOUR_SERVO),this.appendDummyInput("").appendField("Servo").appendField(new Blockly.FieldImage("img/blocks/bqservo02.png",208*options.zoom,126*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("Read Degrees"),this.setOutput(!0,Number),this.setTooltip("Returns that degree with the last servo move.")}},Blockly.Arduino.zum_button=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_button_"+a]=JST.zum_button_setups({dropdown_pin:a});var b=JST.zum_button({dropdown_pin:a});return b="digitalRead("+a+")",[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_button={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","button"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_button",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Button").appendField(new Blockly.FieldImage("img/blocks/zum02.png",212*options.zoom,139*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setOutput(!0,Boolean),this.setTooltip("bq Button")}},Blockly.Arduino.zum_follower=function(){var a=this.getFieldValue("PIN")||1,b=this.getFieldValue("PIN2")||2,c=Blockly.Arduino.statementToCode(this,"SENS1"),d=Blockly.Arduino.statementToCode(this,"SENS2");Blockly.Arduino.setups_["setup_follower_"+a]=JST.zum_follower_setups({dropdown_pin:a,NextPIN:b});var e=JST.zum_follower({dropdown_pin:a,NextPIN:b,code_btn1:c,code_btn2:d});return[e,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_follower={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","follower"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_follower",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Infrared Sensor").appendField(new Blockly.FieldImage("img/blocks/zum06.png",203*options.zoom,165*options.zoom)),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("PIN LEFT#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.appendDummyInput("").setAlign(Blockly.ALIGN_RIGHT).appendField("PIN RIGHT#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN2"),this.appendStatementInput("SENS1").setAlign(Blockly.ALIGN_RIGHT).appendField("Left"),this.appendStatementInput("SENS2").setAlign(Blockly.ALIGN_RIGHT).appendField("Right"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq Infrared Sensor")}},Blockly.Arduino.zum_infrared=function(){var a=this.getFieldValue("PIN");Blockly.Arduino.setups_["setup_infrared_"+a]=JST.zum_infrared_setups({dropdown_pin:a});var b=JST.zum_infrared({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_infrared={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","infrared"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_infrared",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Infrared Sensor").appendField(new Blockly.FieldImage("img/blocks/zum07.png",208*options.zoom,126*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.setOutput(!0),this.setTooltip("bq Infrared Sensor")}},Blockly.Arduino.zum_led=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT");Blockly.Arduino.setups_["setup_green_led_"+a]=JST.zum_led_setups({dropdown_pin:a,dropdown_stat:b});var c=JST.zum_led({dropdown_pin:a,dropdown_stat:b});return c},Blockly.Blocks.zum_led={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","led"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_led",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("LED").appendField(new Blockly.FieldImage("img/blocks/zum04.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField("state").appendField(new Blockly.FieldDropdown([["ON","HIGH"],["OFF","LOW"]]),"STAT"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("bq LED")}},Blockly.Arduino.zum_photoresistor=function(){var a=this.getFieldValue("PIN"),b=JST.zum_photoresistor({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_photoresistor={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","photoresistor"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_photoresistor",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Photoresistor").appendField(new Blockly.FieldImage("img/blocks/zum05.png",208*options.zoom,126*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Number),this.setTooltip("Output the value of the photoresistor.")}},Blockly.Arduino.zum_piezo_buzzer=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("STAT"),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.zum_piezo_buzzer({dropdown_pin:a,dropdown_stat:b,delay_time:c});return d="tone("+a+","+b+","+c+");\ndelay("+c+");\n"},Blockly.Blocks.zum_piezo_buzzer={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","buzzer"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_piezo_buzzer",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Buzzer").appendField(new Blockly.FieldImage("img/blocks/zum01.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN").appendField("TONE").appendField(new Blockly.FieldDropdown([["DO","261"],["RE","293"],["MI","329"],["FA","349"],["SOL","392"],["LA","440"],["SI","494"]]),"STAT"),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Duration"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Piezo Buzzer")}},Blockly.Arduino.zum_piezo_buzzerav=function(){var a=this.getFieldValue("PIN"),b=Blockly.Arduino.valueToCode(this,"TONE",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(this,"DURA",Blockly.Arduino.ORDER_ATOMIC),d=JST.zum_piezo_buzzerav({dropdown_pin:a,Buzztone:b,delay_time:c});return d},Blockly.Blocks.zum_piezo_buzzerav={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","advanced buzzer"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_piezo_buzzerav",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Advanced Buzzer").appendField(new Blockly.FieldImage("img/blocks/zum01.png",208*options.zoom,140*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.digital),"PIN"),this.appendValueInput("TONE",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("TONE"),this.appendValueInput("DURA",Number).setCheck(Number).setAlign(Blockly.ALIGN_RIGHT).appendField("Duration"),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setTooltip("Piezo Buzzer Advanced")}},Blockly.Arduino.zum_potentiometer=function(){var a=this.getFieldValue("PIN"),b=JST.zum_potentiometer({dropdown_pin:a});return[b,Blockly.Arduino.ORDER_ATOMIC]},Blockly.Blocks.zum_potentiometer={category:Blockly.LANG_CATEGORY_ZUM,tags:["bq","zum","potentiometer"],helpUrl:"http://github.com/bq/roboblock/tree/master/src/blocks/zum_potentiometer",init:function(){this.setColour(Blockly.LANG_COLOUR_ZUM),this.appendDummyInput("").appendField("Potentiometer").appendField(new Blockly.FieldImage("img/blocks/zum03.png",208*options.zoom,139*options.zoom)).appendField("PIN#").appendField(new Blockly.FieldDropdown(profiles.default.analog),"PIN"),this.setOutput(!0,Number),this.setTooltip("bq Potentiometer")}}},RoboBlocks={load:load};return"function"==typeof define&&define.amd?RoboBlocks:void(window.RoboBlocks=RoboBlocks)});